/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.27
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.github.outscale.osc_sdk_java.client.api;

import io.github.outscale.osc_sdk_java.client.ApiException;
import io.github.outscale.osc_sdk_java.client.model.CreateNetAccessPointRequest;
import io.github.outscale.osc_sdk_java.client.model.CreateNetAccessPointResponse;
import io.github.outscale.osc_sdk_java.client.model.DeleteNetAccessPointRequest;
import io.github.outscale.osc_sdk_java.client.model.DeleteNetAccessPointResponse;
import io.github.outscale.osc_sdk_java.client.model.ReadNetAccessPointServicesRequest;
import io.github.outscale.osc_sdk_java.client.model.ReadNetAccessPointServicesResponse;
import io.github.outscale.osc_sdk_java.client.model.ReadNetAccessPointsRequest;
import io.github.outscale.osc_sdk_java.client.model.ReadNetAccessPointsResponse;
import io.github.outscale.osc_sdk_java.client.model.UpdateNetAccessPointRequest;
import io.github.outscale.osc_sdk_java.client.model.UpdateNetAccessPointResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/** API tests for NetAccessPointApi */
@Disabled
public class NetAccessPointApiTest {

    private final NetAccessPointApi api = new NetAccessPointApi();

    /** @throws ApiException if the Api call fails */
    @Test
    public void createNetAccessPointTest() throws ApiException {
        CreateNetAccessPointRequest createNetAccessPointRequest = null;
        CreateNetAccessPointResponse response =
                api.createNetAccessPoint(createNetAccessPointRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void deleteNetAccessPointTest() throws ApiException {
        DeleteNetAccessPointRequest deleteNetAccessPointRequest = null;
        DeleteNetAccessPointResponse response =
                api.deleteNetAccessPoint(deleteNetAccessPointRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void readNetAccessPointServicesTest() throws ApiException {
        ReadNetAccessPointServicesRequest readNetAccessPointServicesRequest = null;
        ReadNetAccessPointServicesResponse response =
                api.readNetAccessPointServices(readNetAccessPointServicesRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void readNetAccessPointsTest() throws ApiException {
        ReadNetAccessPointsRequest readNetAccessPointsRequest = null;
        ReadNetAccessPointsResponse response = api.readNetAccessPoints(readNetAccessPointsRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void updateNetAccessPointTest() throws ApiException {
        UpdateNetAccessPointRequest updateNetAccessPointRequest = null;
        UpdateNetAccessPointResponse response =
                api.updateNetAccessPoint(updateNetAccessPointRequest);
        // TODO: test validations
    }
}
