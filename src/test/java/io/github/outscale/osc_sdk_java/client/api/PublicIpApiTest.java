/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.github.outscale.osc_sdk_java.client.api;

import io.github.outscale.osc_sdk_java.client.ApiException;
import io.github.outscale.osc_sdk_java.client.model.CreatePublicIpRequest;
import io.github.outscale.osc_sdk_java.client.model.CreatePublicIpResponse;
import io.github.outscale.osc_sdk_java.client.model.DeletePublicIpRequest;
import io.github.outscale.osc_sdk_java.client.model.DeletePublicIpResponse;
import io.github.outscale.osc_sdk_java.client.model.LinkPublicIpRequest;
import io.github.outscale.osc_sdk_java.client.model.LinkPublicIpResponse;
import io.github.outscale.osc_sdk_java.client.model.ReadPublicIpRangesRequest;
import io.github.outscale.osc_sdk_java.client.model.ReadPublicIpRangesResponse;
import io.github.outscale.osc_sdk_java.client.model.ReadPublicIpsRequest;
import io.github.outscale.osc_sdk_java.client.model.ReadPublicIpsResponse;
import io.github.outscale.osc_sdk_java.client.model.UnlinkPublicIpRequest;
import io.github.outscale.osc_sdk_java.client.model.UnlinkPublicIpResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/** API tests for PublicIpApi */
@Disabled
public class PublicIpApiTest {

    private final PublicIpApi api = new PublicIpApi();

    /** @throws ApiException if the Api call fails */
    @Test
    public void createPublicIpTest() throws ApiException {
        CreatePublicIpRequest createPublicIpRequest = null;
        CreatePublicIpResponse response = api.createPublicIp(createPublicIpRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void deletePublicIpTest() throws ApiException {
        DeletePublicIpRequest deletePublicIpRequest = null;
        DeletePublicIpResponse response = api.deletePublicIp(deletePublicIpRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void linkPublicIpTest() throws ApiException {
        LinkPublicIpRequest linkPublicIpRequest = null;
        LinkPublicIpResponse response = api.linkPublicIp(linkPublicIpRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void readPublicIpRangesTest() throws ApiException {
        ReadPublicIpRangesRequest readPublicIpRangesRequest = null;
        ReadPublicIpRangesResponse response = api.readPublicIpRanges(readPublicIpRangesRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void readPublicIpsTest() throws ApiException {
        ReadPublicIpsRequest readPublicIpsRequest = null;
        ReadPublicIpsResponse response = api.readPublicIps(readPublicIpsRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void unlinkPublicIpTest() throws ApiException {
        UnlinkPublicIpRequest unlinkPublicIpRequest = null;
        UnlinkPublicIpResponse response = api.unlinkPublicIp(unlinkPublicIpRequest);
        // TODO: test validations
    }
}
