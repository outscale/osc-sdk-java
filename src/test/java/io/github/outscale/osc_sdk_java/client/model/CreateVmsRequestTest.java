/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.outscale.osc_sdk_java.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.outscale.osc_sdk_java.client.model.BlockDeviceMappingVmCreation;
import io.github.outscale.osc_sdk_java.client.model.NicForVmCreation;
import io.github.outscale.osc_sdk_java.client.model.Placement;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CreateVmsRequest
 */
public class CreateVmsRequestTest {
    private final CreateVmsRequest model = new CreateVmsRequest();

    /**
     * Model tests for CreateVmsRequest
     */
    @Test
    public void testCreateVmsRequest() {
        // TODO: test CreateVmsRequest
    }

    /**
     * Test the property 'blockDeviceMappings'
     */
    @Test
    public void blockDeviceMappingsTest() {
        // TODO: test blockDeviceMappings
    }

    /**
     * Test the property 'bootOnCreation'
     */
    @Test
    public void bootOnCreationTest() {
        // TODO: test bootOnCreation
    }

    /**
     * Test the property 'bsuOptimized'
     */
    @Test
    public void bsuOptimizedTest() {
        // TODO: test bsuOptimized
    }

    /**
     * Test the property 'clientToken'
     */
    @Test
    public void clientTokenTest() {
        // TODO: test clientToken
    }

    /**
     * Test the property 'deletionProtection'
     */
    @Test
    public void deletionProtectionTest() {
        // TODO: test deletionProtection
    }

    /**
     * Test the property 'dryRun'
     */
    @Test
    public void dryRunTest() {
        // TODO: test dryRun
    }

    /**
     * Test the property 'imageId'
     */
    @Test
    public void imageIdTest() {
        // TODO: test imageId
    }

    /**
     * Test the property 'keypairName'
     */
    @Test
    public void keypairNameTest() {
        // TODO: test keypairName
    }

    /**
     * Test the property 'maxVmsCount'
     */
    @Test
    public void maxVmsCountTest() {
        // TODO: test maxVmsCount
    }

    /**
     * Test the property 'minVmsCount'
     */
    @Test
    public void minVmsCountTest() {
        // TODO: test minVmsCount
    }

    /**
     * Test the property 'nestedVirtualization'
     */
    @Test
    public void nestedVirtualizationTest() {
        // TODO: test nestedVirtualization
    }

    /**
     * Test the property 'nics'
     */
    @Test
    public void nicsTest() {
        // TODO: test nics
    }

    /**
     * Test the property 'performance'
     */
    @Test
    public void performanceTest() {
        // TODO: test performance
    }

    /**
     * Test the property 'placement'
     */
    @Test
    public void placementTest() {
        // TODO: test placement
    }

    /**
     * Test the property 'privateIps'
     */
    @Test
    public void privateIpsTest() {
        // TODO: test privateIps
    }

    /**
     * Test the property 'securityGroupIds'
     */
    @Test
    public void securityGroupIdsTest() {
        // TODO: test securityGroupIds
    }

    /**
     * Test the property 'securityGroups'
     */
    @Test
    public void securityGroupsTest() {
        // TODO: test securityGroups
    }

    /**
     * Test the property 'subnetId'
     */
    @Test
    public void subnetIdTest() {
        // TODO: test subnetId
    }

    /**
     * Test the property 'userData'
     */
    @Test
    public void userDataTest() {
        // TODO: test userData
    }

    /**
     * Test the property 'vmInitiatedShutdownBehavior'
     */
    @Test
    public void vmInitiatedShutdownBehaviorTest() {
        // TODO: test vmInitiatedShutdownBehavior
    }

    /**
     * Test the property 'vmType'
     */
    @Test
    public void vmTypeTest() {
        // TODO: test vmType
    }

}
