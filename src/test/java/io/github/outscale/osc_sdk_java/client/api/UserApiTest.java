/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.27
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.github.outscale.osc_sdk_java.client.api;

import io.github.outscale.osc_sdk_java.client.ApiException;
import io.github.outscale.osc_sdk_java.client.model.CreateUserRequest;
import io.github.outscale.osc_sdk_java.client.model.CreateUserResponse;
import io.github.outscale.osc_sdk_java.client.model.DeleteUserRequest;
import io.github.outscale.osc_sdk_java.client.model.DeleteUserResponse;
import io.github.outscale.osc_sdk_java.client.model.ReadUsersRequest;
import io.github.outscale.osc_sdk_java.client.model.ReadUsersResponse;
import io.github.outscale.osc_sdk_java.client.model.UpdateUserRequest;
import io.github.outscale.osc_sdk_java.client.model.UpdateUserResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/** API tests for UserApi */
@Disabled
public class UserApiTest {

    private final UserApi api = new UserApi();

    /** @throws ApiException if the Api call fails */
    @Test
    public void createUserTest() throws ApiException {
        CreateUserRequest createUserRequest = null;
        CreateUserResponse response = api.createUser(createUserRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void deleteUserTest() throws ApiException {
        DeleteUserRequest deleteUserRequest = null;
        DeleteUserResponse response = api.deleteUser(deleteUserRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void readUsersTest() throws ApiException {
        ReadUsersRequest readUsersRequest = null;
        ReadUsersResponse response = api.readUsers(readUsersRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void updateUserTest() throws ApiException {
        UpdateUserRequest updateUserRequest = null;
        UpdateUserResponse response = api.updateUser(updateUserRequest);
        // TODO: test validations
    }
}
