/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.25
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.github.outscale.osc_sdk_java.client.api;

import io.github.outscale.osc_sdk_java.client.ApiException;
import io.github.outscale.osc_sdk_java.client.model.CreateNicRequest;
import io.github.outscale.osc_sdk_java.client.model.CreateNicResponse;
import io.github.outscale.osc_sdk_java.client.model.DeleteNicRequest;
import io.github.outscale.osc_sdk_java.client.model.DeleteNicResponse;
import io.github.outscale.osc_sdk_java.client.model.LinkNicRequest;
import io.github.outscale.osc_sdk_java.client.model.LinkNicResponse;
import io.github.outscale.osc_sdk_java.client.model.LinkPrivateIpsRequest;
import io.github.outscale.osc_sdk_java.client.model.LinkPrivateIpsResponse;
import io.github.outscale.osc_sdk_java.client.model.ReadNicsRequest;
import io.github.outscale.osc_sdk_java.client.model.ReadNicsResponse;
import io.github.outscale.osc_sdk_java.client.model.UnlinkNicRequest;
import io.github.outscale.osc_sdk_java.client.model.UnlinkNicResponse;
import io.github.outscale.osc_sdk_java.client.model.UnlinkPrivateIpsRequest;
import io.github.outscale.osc_sdk_java.client.model.UnlinkPrivateIpsResponse;
import io.github.outscale.osc_sdk_java.client.model.UpdateNicRequest;
import io.github.outscale.osc_sdk_java.client.model.UpdateNicResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/** API tests for NicApi */
@Disabled
public class NicApiTest {

    private final NicApi api = new NicApi();

    /** @throws ApiException if the Api call fails */
    @Test
    public void createNicTest() throws ApiException {
        CreateNicRequest createNicRequest = null;
        CreateNicResponse response = api.createNic(createNicRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void deleteNicTest() throws ApiException {
        DeleteNicRequest deleteNicRequest = null;
        DeleteNicResponse response = api.deleteNic(deleteNicRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void linkNicTest() throws ApiException {
        LinkNicRequest linkNicRequest = null;
        LinkNicResponse response = api.linkNic(linkNicRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void linkPrivateIpsTest() throws ApiException {
        LinkPrivateIpsRequest linkPrivateIpsRequest = null;
        LinkPrivateIpsResponse response = api.linkPrivateIps(linkPrivateIpsRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void readNicsTest() throws ApiException {
        ReadNicsRequest readNicsRequest = null;
        ReadNicsResponse response = api.readNics(readNicsRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void unlinkNicTest() throws ApiException {
        UnlinkNicRequest unlinkNicRequest = null;
        UnlinkNicResponse response = api.unlinkNic(unlinkNicRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void unlinkPrivateIpsTest() throws ApiException {
        UnlinkPrivateIpsRequest unlinkPrivateIpsRequest = null;
        UnlinkPrivateIpsResponse response = api.unlinkPrivateIps(unlinkPrivateIpsRequest);
        // TODO: test validations
    }

    /** @throws ApiException if the Api call fails */
    @Test
    public void updateNicTest() throws ApiException {
        UpdateNicRequest updateNicRequest = null;
        UpdateNicResponse response = api.updateNic(updateNicRequest);
        // TODO: test validations
    }
}
