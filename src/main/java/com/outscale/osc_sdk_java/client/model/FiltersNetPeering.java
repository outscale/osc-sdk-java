/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * One or more filters.
 */
@ApiModel(description = "One or more filters.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class FiltersNetPeering {
  public static final String SERIALIZED_NAME_ACCEPTER_NET_ACCOUNT_IDS = "AccepterNetAccountIds";
  @SerializedName(SERIALIZED_NAME_ACCEPTER_NET_ACCOUNT_IDS)
  private List<String> accepterNetAccountIds = null;

  public static final String SERIALIZED_NAME_ACCEPTER_NET_IP_RANGES = "AccepterNetIpRanges";
  @SerializedName(SERIALIZED_NAME_ACCEPTER_NET_IP_RANGES)
  private List<String> accepterNetIpRanges = null;

  public static final String SERIALIZED_NAME_ACCEPTER_NET_NET_IDS = "AccepterNetNetIds";
  @SerializedName(SERIALIZED_NAME_ACCEPTER_NET_NET_IDS)
  private List<String> accepterNetNetIds = null;

  public static final String SERIALIZED_NAME_NET_PEERING_IDS = "NetPeeringIds";
  @SerializedName(SERIALIZED_NAME_NET_PEERING_IDS)
  private List<String> netPeeringIds = null;

  public static final String SERIALIZED_NAME_SOURCE_NET_ACCOUNT_IDS = "SourceNetAccountIds";
  @SerializedName(SERIALIZED_NAME_SOURCE_NET_ACCOUNT_IDS)
  private List<String> sourceNetAccountIds = null;

  public static final String SERIALIZED_NAME_SOURCE_NET_IP_RANGES = "SourceNetIpRanges";
  @SerializedName(SERIALIZED_NAME_SOURCE_NET_IP_RANGES)
  private List<String> sourceNetIpRanges = null;

  public static final String SERIALIZED_NAME_SOURCE_NET_NET_IDS = "SourceNetNetIds";
  @SerializedName(SERIALIZED_NAME_SOURCE_NET_NET_IDS)
  private List<String> sourceNetNetIds = null;

  public static final String SERIALIZED_NAME_STATE_MESSAGES = "StateMessages";
  @SerializedName(SERIALIZED_NAME_STATE_MESSAGES)
  private List<String> stateMessages = null;

  public static final String SERIALIZED_NAME_STATE_NAMES = "StateNames";
  @SerializedName(SERIALIZED_NAME_STATE_NAMES)
  private List<String> stateNames = null;

  public static final String SERIALIZED_NAME_TAG_KEYS = "TagKeys";
  @SerializedName(SERIALIZED_NAME_TAG_KEYS)
  private List<String> tagKeys = null;

  public static final String SERIALIZED_NAME_TAG_VALUES = "TagValues";
  @SerializedName(SERIALIZED_NAME_TAG_VALUES)
  private List<String> tagValues = null;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;


  public FiltersNetPeering accepterNetAccountIds(List<String> accepterNetAccountIds) {
    
    this.accepterNetAccountIds = accepterNetAccountIds;
    return this;
  }

  public FiltersNetPeering addAccepterNetAccountIdsItem(String accepterNetAccountIdsItem) {
    if (this.accepterNetAccountIds == null) {
      this.accepterNetAccountIds = new ArrayList<String>();
    }
    this.accepterNetAccountIds.add(accepterNetAccountIdsItem);
    return this;
  }

   /**
   * The account IDs of the owners of the peer Nets.
   * @return accepterNetAccountIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account IDs of the owners of the peer Nets.")

  public List<String> getAccepterNetAccountIds() {
    return accepterNetAccountIds;
  }


  public void setAccepterNetAccountIds(List<String> accepterNetAccountIds) {
    this.accepterNetAccountIds = accepterNetAccountIds;
  }


  public FiltersNetPeering accepterNetIpRanges(List<String> accepterNetIpRanges) {
    
    this.accepterNetIpRanges = accepterNetIpRanges;
    return this;
  }

  public FiltersNetPeering addAccepterNetIpRangesItem(String accepterNetIpRangesItem) {
    if (this.accepterNetIpRanges == null) {
      this.accepterNetIpRanges = new ArrayList<String>();
    }
    this.accepterNetIpRanges.add(accepterNetIpRangesItem);
    return this;
  }

   /**
   * The IP ranges of the peer Nets, in CIDR notation (for example, &#x60;10.0.0.0/24&#x60;).
   * @return accepterNetIpRanges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IP ranges of the peer Nets, in CIDR notation (for example, `10.0.0.0/24`).")

  public List<String> getAccepterNetIpRanges() {
    return accepterNetIpRanges;
  }


  public void setAccepterNetIpRanges(List<String> accepterNetIpRanges) {
    this.accepterNetIpRanges = accepterNetIpRanges;
  }


  public FiltersNetPeering accepterNetNetIds(List<String> accepterNetNetIds) {
    
    this.accepterNetNetIds = accepterNetNetIds;
    return this;
  }

  public FiltersNetPeering addAccepterNetNetIdsItem(String accepterNetNetIdsItem) {
    if (this.accepterNetNetIds == null) {
      this.accepterNetNetIds = new ArrayList<String>();
    }
    this.accepterNetNetIds.add(accepterNetNetIdsItem);
    return this;
  }

   /**
   * The IDs of the peer Nets.
   * @return accepterNetNetIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the peer Nets.")

  public List<String> getAccepterNetNetIds() {
    return accepterNetNetIds;
  }


  public void setAccepterNetNetIds(List<String> accepterNetNetIds) {
    this.accepterNetNetIds = accepterNetNetIds;
  }


  public FiltersNetPeering netPeeringIds(List<String> netPeeringIds) {
    
    this.netPeeringIds = netPeeringIds;
    return this;
  }

  public FiltersNetPeering addNetPeeringIdsItem(String netPeeringIdsItem) {
    if (this.netPeeringIds == null) {
      this.netPeeringIds = new ArrayList<String>();
    }
    this.netPeeringIds.add(netPeeringIdsItem);
    return this;
  }

   /**
   * The IDs of the Net peerings.
   * @return netPeeringIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the Net peerings.")

  public List<String> getNetPeeringIds() {
    return netPeeringIds;
  }


  public void setNetPeeringIds(List<String> netPeeringIds) {
    this.netPeeringIds = netPeeringIds;
  }


  public FiltersNetPeering sourceNetAccountIds(List<String> sourceNetAccountIds) {
    
    this.sourceNetAccountIds = sourceNetAccountIds;
    return this;
  }

  public FiltersNetPeering addSourceNetAccountIdsItem(String sourceNetAccountIdsItem) {
    if (this.sourceNetAccountIds == null) {
      this.sourceNetAccountIds = new ArrayList<String>();
    }
    this.sourceNetAccountIds.add(sourceNetAccountIdsItem);
    return this;
  }

   /**
   * The account IDs of the owners of the peer Nets.
   * @return sourceNetAccountIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account IDs of the owners of the peer Nets.")

  public List<String> getSourceNetAccountIds() {
    return sourceNetAccountIds;
  }


  public void setSourceNetAccountIds(List<String> sourceNetAccountIds) {
    this.sourceNetAccountIds = sourceNetAccountIds;
  }


  public FiltersNetPeering sourceNetIpRanges(List<String> sourceNetIpRanges) {
    
    this.sourceNetIpRanges = sourceNetIpRanges;
    return this;
  }

  public FiltersNetPeering addSourceNetIpRangesItem(String sourceNetIpRangesItem) {
    if (this.sourceNetIpRanges == null) {
      this.sourceNetIpRanges = new ArrayList<String>();
    }
    this.sourceNetIpRanges.add(sourceNetIpRangesItem);
    return this;
  }

   /**
   * The IP ranges of the peer Nets.
   * @return sourceNetIpRanges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IP ranges of the peer Nets.")

  public List<String> getSourceNetIpRanges() {
    return sourceNetIpRanges;
  }


  public void setSourceNetIpRanges(List<String> sourceNetIpRanges) {
    this.sourceNetIpRanges = sourceNetIpRanges;
  }


  public FiltersNetPeering sourceNetNetIds(List<String> sourceNetNetIds) {
    
    this.sourceNetNetIds = sourceNetNetIds;
    return this;
  }

  public FiltersNetPeering addSourceNetNetIdsItem(String sourceNetNetIdsItem) {
    if (this.sourceNetNetIds == null) {
      this.sourceNetNetIds = new ArrayList<String>();
    }
    this.sourceNetNetIds.add(sourceNetNetIdsItem);
    return this;
  }

   /**
   * The IDs of the peer Nets.
   * @return sourceNetNetIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the peer Nets.")

  public List<String> getSourceNetNetIds() {
    return sourceNetNetIds;
  }


  public void setSourceNetNetIds(List<String> sourceNetNetIds) {
    this.sourceNetNetIds = sourceNetNetIds;
  }


  public FiltersNetPeering stateMessages(List<String> stateMessages) {
    
    this.stateMessages = stateMessages;
    return this;
  }

  public FiltersNetPeering addStateMessagesItem(String stateMessagesItem) {
    if (this.stateMessages == null) {
      this.stateMessages = new ArrayList<String>();
    }
    this.stateMessages.add(stateMessagesItem);
    return this;
  }

   /**
   * Additional information about the states of the Net peerings.
   * @return stateMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information about the states of the Net peerings.")

  public List<String> getStateMessages() {
    return stateMessages;
  }


  public void setStateMessages(List<String> stateMessages) {
    this.stateMessages = stateMessages;
  }


  public FiltersNetPeering stateNames(List<String> stateNames) {
    
    this.stateNames = stateNames;
    return this;
  }

  public FiltersNetPeering addStateNamesItem(String stateNamesItem) {
    if (this.stateNames == null) {
      this.stateNames = new ArrayList<String>();
    }
    this.stateNames.add(stateNamesItem);
    return this;
  }

   /**
   * The states of the Net peerings (&#x60;pending-acceptance&#x60; \\| &#x60;active&#x60; \\| &#x60;rejected&#x60; \\| &#x60;failed&#x60; \\| &#x60;expired&#x60; \\| &#x60;deleted&#x60;).
   * @return stateNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The states of the Net peerings (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).")

  public List<String> getStateNames() {
    return stateNames;
  }


  public void setStateNames(List<String> stateNames) {
    this.stateNames = stateNames;
  }


  public FiltersNetPeering tagKeys(List<String> tagKeys) {
    
    this.tagKeys = tagKeys;
    return this;
  }

  public FiltersNetPeering addTagKeysItem(String tagKeysItem) {
    if (this.tagKeys == null) {
      this.tagKeys = new ArrayList<String>();
    }
    this.tagKeys.add(tagKeysItem);
    return this;
  }

   /**
   * The keys of the tags associated with the Net peerings.
   * @return tagKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The keys of the tags associated with the Net peerings.")

  public List<String> getTagKeys() {
    return tagKeys;
  }


  public void setTagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
  }


  public FiltersNetPeering tagValues(List<String> tagValues) {
    
    this.tagValues = tagValues;
    return this;
  }

  public FiltersNetPeering addTagValuesItem(String tagValuesItem) {
    if (this.tagValues == null) {
      this.tagValues = new ArrayList<String>();
    }
    this.tagValues.add(tagValuesItem);
    return this;
  }

   /**
   * The values of the tags associated with the Net peerings.
   * @return tagValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The values of the tags associated with the Net peerings.")

  public List<String> getTagValues() {
    return tagValues;
  }


  public void setTagValues(List<String> tagValues) {
    this.tagValues = tagValues;
  }


  public FiltersNetPeering tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public FiltersNetPeering addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The key/value combination of the tags associated with the Net peerings, in the following format: &amp;quot;Filters&amp;quot;:{&amp;quot;Tags&amp;quot;:[&amp;quot;TAGKEY&#x3D;TAGVALUE&amp;quot;]}.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key/value combination of the tags associated with the Net peerings, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiltersNetPeering filtersNetPeering = (FiltersNetPeering) o;
    return Objects.equals(this.accepterNetAccountIds, filtersNetPeering.accepterNetAccountIds) &&
        Objects.equals(this.accepterNetIpRanges, filtersNetPeering.accepterNetIpRanges) &&
        Objects.equals(this.accepterNetNetIds, filtersNetPeering.accepterNetNetIds) &&
        Objects.equals(this.netPeeringIds, filtersNetPeering.netPeeringIds) &&
        Objects.equals(this.sourceNetAccountIds, filtersNetPeering.sourceNetAccountIds) &&
        Objects.equals(this.sourceNetIpRanges, filtersNetPeering.sourceNetIpRanges) &&
        Objects.equals(this.sourceNetNetIds, filtersNetPeering.sourceNetNetIds) &&
        Objects.equals(this.stateMessages, filtersNetPeering.stateMessages) &&
        Objects.equals(this.stateNames, filtersNetPeering.stateNames) &&
        Objects.equals(this.tagKeys, filtersNetPeering.tagKeys) &&
        Objects.equals(this.tagValues, filtersNetPeering.tagValues) &&
        Objects.equals(this.tags, filtersNetPeering.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accepterNetAccountIds, accepterNetIpRanges, accepterNetNetIds, netPeeringIds, sourceNetAccountIds, sourceNetIpRanges, sourceNetNetIds, stateMessages, stateNames, tagKeys, tagValues, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiltersNetPeering {\n");
    sb.append("    accepterNetAccountIds: ").append(toIndentedString(accepterNetAccountIds)).append("\n");
    sb.append("    accepterNetIpRanges: ").append(toIndentedString(accepterNetIpRanges)).append("\n");
    sb.append("    accepterNetNetIds: ").append(toIndentedString(accepterNetNetIds)).append("\n");
    sb.append("    netPeeringIds: ").append(toIndentedString(netPeeringIds)).append("\n");
    sb.append("    sourceNetAccountIds: ").append(toIndentedString(sourceNetAccountIds)).append("\n");
    sb.append("    sourceNetIpRanges: ").append(toIndentedString(sourceNetIpRanges)).append("\n");
    sb.append("    sourceNetNetIds: ").append(toIndentedString(sourceNetNetIds)).append("\n");
    sb.append("    stateMessages: ").append(toIndentedString(stateMessages)).append("\n");
    sb.append("    stateNames: ").append(toIndentedString(stateNames)).append("\n");
    sb.append("    tagKeys: ").append(toIndentedString(tagKeys)).append("\n");
    sb.append("    tagValues: ").append(toIndentedString(tagValues)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

