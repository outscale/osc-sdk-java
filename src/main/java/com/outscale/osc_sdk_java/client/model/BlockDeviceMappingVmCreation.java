/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.BsuToCreate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information about the block device mapping.
 */
@ApiModel(description = "Information about the block device mapping.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class BlockDeviceMappingVmCreation {
  public static final String SERIALIZED_NAME_BSU = "Bsu";
  @SerializedName(SERIALIZED_NAME_BSU)
  private BsuToCreate bsu;

  public static final String SERIALIZED_NAME_DEVICE_NAME = "DeviceName";
  @SerializedName(SERIALIZED_NAME_DEVICE_NAME)
  private String deviceName;

  public static final String SERIALIZED_NAME_NO_DEVICE = "NoDevice";
  @SerializedName(SERIALIZED_NAME_NO_DEVICE)
  private String noDevice;

  public static final String SERIALIZED_NAME_VIRTUAL_DEVICE_NAME = "VirtualDeviceName";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_DEVICE_NAME)
  private String virtualDeviceName;


  public BlockDeviceMappingVmCreation bsu(BsuToCreate bsu) {
    
    this.bsu = bsu;
    return this;
  }

   /**
   * Get bsu
   * @return bsu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BsuToCreate getBsu() {
    return bsu;
  }


  public void setBsu(BsuToCreate bsu) {
    this.bsu = bsu;
  }


  public BlockDeviceMappingVmCreation deviceName(String deviceName) {
    
    this.deviceName = deviceName;
    return this;
  }

   /**
   * The device name for the volume. For a root device, you must use &#x60;/dev/sda1&#x60;. For other volumes, you must use &#x60;/dev/sdX&#x60;, &#x60;/dev/sdXX&#x60;, &#x60;/dev/xvdX&#x60;, or &#x60;/dev/xvdXX&#x60; (where the first &#x60;X&#x60; is a letter between &#x60;b&#x60; and &#x60;z&#x60;, and the second &#x60;X&#x60; is a letter between &#x60;a&#x60; and &#x60;z&#x60;).
   * @return deviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).")

  public String getDeviceName() {
    return deviceName;
  }


  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }


  public BlockDeviceMappingVmCreation noDevice(String noDevice) {
    
    this.noDevice = noDevice;
    return this;
  }

   /**
   * Removes the device which is included in the block device mapping of the OMI.
   * @return noDevice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Removes the device which is included in the block device mapping of the OMI.")

  public String getNoDevice() {
    return noDevice;
  }


  public void setNoDevice(String noDevice) {
    this.noDevice = noDevice;
  }


  public BlockDeviceMappingVmCreation virtualDeviceName(String virtualDeviceName) {
    
    this.virtualDeviceName = virtualDeviceName;
    return this;
  }

   /**
   * The name of the virtual device (&#x60;ephemeralN&#x60;).
   * @return virtualDeviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the virtual device (`ephemeralN`).")

  public String getVirtualDeviceName() {
    return virtualDeviceName;
  }


  public void setVirtualDeviceName(String virtualDeviceName) {
    this.virtualDeviceName = virtualDeviceName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlockDeviceMappingVmCreation blockDeviceMappingVmCreation = (BlockDeviceMappingVmCreation) o;
    return Objects.equals(this.bsu, blockDeviceMappingVmCreation.bsu) &&
        Objects.equals(this.deviceName, blockDeviceMappingVmCreation.deviceName) &&
        Objects.equals(this.noDevice, blockDeviceMappingVmCreation.noDevice) &&
        Objects.equals(this.virtualDeviceName, blockDeviceMappingVmCreation.virtualDeviceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bsu, deviceName, noDevice, virtualDeviceName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlockDeviceMappingVmCreation {\n");
    sb.append("    bsu: ").append(toIndentedString(bsu)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    noDevice: ").append(toIndentedString(noDevice)).append("\n");
    sb.append("    virtualDeviceName: ").append(toIndentedString(virtualDeviceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

