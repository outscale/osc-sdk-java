/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * One or more filters.
 */
@ApiModel(description = "One or more filters.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class FiltersVpnConnection {
  public static final String SERIALIZED_NAME_BGP_ASNS = "BgpAsns";
  @SerializedName(SERIALIZED_NAME_BGP_ASNS)
  private List<Integer> bgpAsns = null;

  public static final String SERIALIZED_NAME_CLIENT_GATEWAY_IDS = "ClientGatewayIds";
  @SerializedName(SERIALIZED_NAME_CLIENT_GATEWAY_IDS)
  private List<String> clientGatewayIds = null;

  public static final String SERIALIZED_NAME_CONNECTION_TYPES = "ConnectionTypes";
  @SerializedName(SERIALIZED_NAME_CONNECTION_TYPES)
  private List<String> connectionTypes = null;

  public static final String SERIALIZED_NAME_ROUTE_DESTINATION_IP_RANGES = "RouteDestinationIpRanges";
  @SerializedName(SERIALIZED_NAME_ROUTE_DESTINATION_IP_RANGES)
  private List<String> routeDestinationIpRanges = null;

  public static final String SERIALIZED_NAME_STATES = "States";
  @SerializedName(SERIALIZED_NAME_STATES)
  private List<String> states = null;

  public static final String SERIALIZED_NAME_STATIC_ROUTES_ONLY = "StaticRoutesOnly";
  @SerializedName(SERIALIZED_NAME_STATIC_ROUTES_ONLY)
  private Boolean staticRoutesOnly;

  public static final String SERIALIZED_NAME_TAG_KEYS = "TagKeys";
  @SerializedName(SERIALIZED_NAME_TAG_KEYS)
  private List<String> tagKeys = null;

  public static final String SERIALIZED_NAME_TAG_VALUES = "TagValues";
  @SerializedName(SERIALIZED_NAME_TAG_VALUES)
  private List<String> tagValues = null;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_VIRTUAL_GATEWAY_IDS = "VirtualGatewayIds";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_GATEWAY_IDS)
  private List<String> virtualGatewayIds = null;

  public static final String SERIALIZED_NAME_VPN_CONNECTION_IDS = "VpnConnectionIds";
  @SerializedName(SERIALIZED_NAME_VPN_CONNECTION_IDS)
  private List<String> vpnConnectionIds = null;


  public FiltersVpnConnection bgpAsns(List<Integer> bgpAsns) {
    
    this.bgpAsns = bgpAsns;
    return this;
  }

  public FiltersVpnConnection addBgpAsnsItem(Integer bgpAsnsItem) {
    if (this.bgpAsns == null) {
      this.bgpAsns = new ArrayList<Integer>();
    }
    this.bgpAsns.add(bgpAsnsItem);
    return this;
  }

   /**
   * The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.
   * @return bgpAsns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.")

  public List<Integer> getBgpAsns() {
    return bgpAsns;
  }


  public void setBgpAsns(List<Integer> bgpAsns) {
    this.bgpAsns = bgpAsns;
  }


  public FiltersVpnConnection clientGatewayIds(List<String> clientGatewayIds) {
    
    this.clientGatewayIds = clientGatewayIds;
    return this;
  }

  public FiltersVpnConnection addClientGatewayIdsItem(String clientGatewayIdsItem) {
    if (this.clientGatewayIds == null) {
      this.clientGatewayIds = new ArrayList<String>();
    }
    this.clientGatewayIds.add(clientGatewayIdsItem);
    return this;
  }

   /**
   * The IDs of the client gateways.
   * @return clientGatewayIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the client gateways.")

  public List<String> getClientGatewayIds() {
    return clientGatewayIds;
  }


  public void setClientGatewayIds(List<String> clientGatewayIds) {
    this.clientGatewayIds = clientGatewayIds;
  }


  public FiltersVpnConnection connectionTypes(List<String> connectionTypes) {
    
    this.connectionTypes = connectionTypes;
    return this;
  }

  public FiltersVpnConnection addConnectionTypesItem(String connectionTypesItem) {
    if (this.connectionTypes == null) {
      this.connectionTypes = new ArrayList<String>();
    }
    this.connectionTypes.add(connectionTypesItem);
    return this;
  }

   /**
   * The types of the VPN connections (only &#x60;ipsec.1&#x60; is supported).
   * @return connectionTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The types of the VPN connections (only `ipsec.1` is supported).")

  public List<String> getConnectionTypes() {
    return connectionTypes;
  }


  public void setConnectionTypes(List<String> connectionTypes) {
    this.connectionTypes = connectionTypes;
  }


  public FiltersVpnConnection routeDestinationIpRanges(List<String> routeDestinationIpRanges) {
    
    this.routeDestinationIpRanges = routeDestinationIpRanges;
    return this;
  }

  public FiltersVpnConnection addRouteDestinationIpRangesItem(String routeDestinationIpRangesItem) {
    if (this.routeDestinationIpRanges == null) {
      this.routeDestinationIpRanges = new ArrayList<String>();
    }
    this.routeDestinationIpRanges.add(routeDestinationIpRangesItem);
    return this;
  }

   /**
   * The destination IP ranges.
   * @return routeDestinationIpRanges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The destination IP ranges.")

  public List<String> getRouteDestinationIpRanges() {
    return routeDestinationIpRanges;
  }


  public void setRouteDestinationIpRanges(List<String> routeDestinationIpRanges) {
    this.routeDestinationIpRanges = routeDestinationIpRanges;
  }


  public FiltersVpnConnection states(List<String> states) {
    
    this.states = states;
    return this;
  }

  public FiltersVpnConnection addStatesItem(String statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<String>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * The states of the VPN connections (&#x60;pending&#x60; \\| &#x60;available&#x60; \\| &#x60;deleting&#x60; \\| &#x60;deleted&#x60;).
   * @return states
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The states of the VPN connections (`pending` \\| `available` \\| `deleting` \\| `deleted`).")

  public List<String> getStates() {
    return states;
  }


  public void setStates(List<String> states) {
    this.states = states;
  }


  public FiltersVpnConnection staticRoutesOnly(Boolean staticRoutesOnly) {
    
    this.staticRoutesOnly = staticRoutesOnly;
    return this;
  }

   /**
   * If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
   * @return staticRoutesOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).")

  public Boolean getStaticRoutesOnly() {
    return staticRoutesOnly;
  }


  public void setStaticRoutesOnly(Boolean staticRoutesOnly) {
    this.staticRoutesOnly = staticRoutesOnly;
  }


  public FiltersVpnConnection tagKeys(List<String> tagKeys) {
    
    this.tagKeys = tagKeys;
    return this;
  }

  public FiltersVpnConnection addTagKeysItem(String tagKeysItem) {
    if (this.tagKeys == null) {
      this.tagKeys = new ArrayList<String>();
    }
    this.tagKeys.add(tagKeysItem);
    return this;
  }

   /**
   * The keys of the tags associated with the VPN connections.
   * @return tagKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The keys of the tags associated with the VPN connections.")

  public List<String> getTagKeys() {
    return tagKeys;
  }


  public void setTagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
  }


  public FiltersVpnConnection tagValues(List<String> tagValues) {
    
    this.tagValues = tagValues;
    return this;
  }

  public FiltersVpnConnection addTagValuesItem(String tagValuesItem) {
    if (this.tagValues == null) {
      this.tagValues = new ArrayList<String>();
    }
    this.tagValues.add(tagValuesItem);
    return this;
  }

   /**
   * The values of the tags associated with the VPN connections.
   * @return tagValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The values of the tags associated with the VPN connections.")

  public List<String> getTagValues() {
    return tagValues;
  }


  public void setTagValues(List<String> tagValues) {
    this.tagValues = tagValues;
  }


  public FiltersVpnConnection tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public FiltersVpnConnection addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The key/value combination of the tags associated with the VPN connections, in the following format: &amp;quot;Filters&amp;quot;:{&amp;quot;Tags&amp;quot;:[&amp;quot;TAGKEY&#x3D;TAGVALUE&amp;quot;]}.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key/value combination of the tags associated with the VPN connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public FiltersVpnConnection virtualGatewayIds(List<String> virtualGatewayIds) {
    
    this.virtualGatewayIds = virtualGatewayIds;
    return this;
  }

  public FiltersVpnConnection addVirtualGatewayIdsItem(String virtualGatewayIdsItem) {
    if (this.virtualGatewayIds == null) {
      this.virtualGatewayIds = new ArrayList<String>();
    }
    this.virtualGatewayIds.add(virtualGatewayIdsItem);
    return this;
  }

   /**
   * The IDs of the virtual gateways.
   * @return virtualGatewayIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the virtual gateways.")

  public List<String> getVirtualGatewayIds() {
    return virtualGatewayIds;
  }


  public void setVirtualGatewayIds(List<String> virtualGatewayIds) {
    this.virtualGatewayIds = virtualGatewayIds;
  }


  public FiltersVpnConnection vpnConnectionIds(List<String> vpnConnectionIds) {
    
    this.vpnConnectionIds = vpnConnectionIds;
    return this;
  }

  public FiltersVpnConnection addVpnConnectionIdsItem(String vpnConnectionIdsItem) {
    if (this.vpnConnectionIds == null) {
      this.vpnConnectionIds = new ArrayList<String>();
    }
    this.vpnConnectionIds.add(vpnConnectionIdsItem);
    return this;
  }

   /**
   * The IDs of the VPN connections.
   * @return vpnConnectionIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the VPN connections.")

  public List<String> getVpnConnectionIds() {
    return vpnConnectionIds;
  }


  public void setVpnConnectionIds(List<String> vpnConnectionIds) {
    this.vpnConnectionIds = vpnConnectionIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiltersVpnConnection filtersVpnConnection = (FiltersVpnConnection) o;
    return Objects.equals(this.bgpAsns, filtersVpnConnection.bgpAsns) &&
        Objects.equals(this.clientGatewayIds, filtersVpnConnection.clientGatewayIds) &&
        Objects.equals(this.connectionTypes, filtersVpnConnection.connectionTypes) &&
        Objects.equals(this.routeDestinationIpRanges, filtersVpnConnection.routeDestinationIpRanges) &&
        Objects.equals(this.states, filtersVpnConnection.states) &&
        Objects.equals(this.staticRoutesOnly, filtersVpnConnection.staticRoutesOnly) &&
        Objects.equals(this.tagKeys, filtersVpnConnection.tagKeys) &&
        Objects.equals(this.tagValues, filtersVpnConnection.tagValues) &&
        Objects.equals(this.tags, filtersVpnConnection.tags) &&
        Objects.equals(this.virtualGatewayIds, filtersVpnConnection.virtualGatewayIds) &&
        Objects.equals(this.vpnConnectionIds, filtersVpnConnection.vpnConnectionIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bgpAsns, clientGatewayIds, connectionTypes, routeDestinationIpRanges, states, staticRoutesOnly, tagKeys, tagValues, tags, virtualGatewayIds, vpnConnectionIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiltersVpnConnection {\n");
    sb.append("    bgpAsns: ").append(toIndentedString(bgpAsns)).append("\n");
    sb.append("    clientGatewayIds: ").append(toIndentedString(clientGatewayIds)).append("\n");
    sb.append("    connectionTypes: ").append(toIndentedString(connectionTypes)).append("\n");
    sb.append("    routeDestinationIpRanges: ").append(toIndentedString(routeDestinationIpRanges)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    staticRoutesOnly: ").append(toIndentedString(staticRoutesOnly)).append("\n");
    sb.append("    tagKeys: ").append(toIndentedString(tagKeys)).append("\n");
    sb.append("    tagValues: ").append(toIndentedString(tagValues)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    virtualGatewayIds: ").append(toIndentedString(virtualGatewayIds)).append("\n");
    sb.append("    vpnConnectionIds: ").append(toIndentedString(vpnConnectionIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

