/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information about the route.
 */
@ApiModel(description = "Information about the route.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class RouteLight {
  public static final String SERIALIZED_NAME_DESTINATION_IP_RANGE = "DestinationIpRange";
  @SerializedName(SERIALIZED_NAME_DESTINATION_IP_RANGE)
  private String destinationIpRange;

  public static final String SERIALIZED_NAME_ROUTE_TYPE = "RouteType";
  @SerializedName(SERIALIZED_NAME_ROUTE_TYPE)
  private String routeType;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;


  public RouteLight destinationIpRange(String destinationIpRange) {
    
    this.destinationIpRange = destinationIpRange;
    return this;
  }

   /**
   * The IP range used for the destination match, in CIDR notation (for example, &#x60;10.0.0.0/24&#x60;).
   * @return destinationIpRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).")

  public String getDestinationIpRange() {
    return destinationIpRange;
  }


  public void setDestinationIpRange(String destinationIpRange) {
    this.destinationIpRange = destinationIpRange;
  }


  public RouteLight routeType(String routeType) {
    
    this.routeType = routeType;
    return this;
  }

   /**
   * The type of route (always &#x60;static&#x60;).
   * @return routeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of route (always `static`).")

  public String getRouteType() {
    return routeType;
  }


  public void setRouteType(String routeType) {
    this.routeType = routeType;
  }


  public RouteLight state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * The current state of the static route (&#x60;pending&#x60; \\| &#x60;available&#x60; \\| &#x60;deleting&#x60; \\| &#x60;deleted&#x60;).
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`).")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteLight routeLight = (RouteLight) o;
    return Objects.equals(this.destinationIpRange, routeLight.destinationIpRange) &&
        Objects.equals(this.routeType, routeLight.routeType) &&
        Objects.equals(this.state, routeLight.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationIpRange, routeType, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteLight {\n");
    sb.append("    destinationIpRange: ").append(toIndentedString(destinationIpRange)).append("\n");
    sb.append("    routeType: ").append(toIndentedString(routeType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

