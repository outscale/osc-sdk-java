/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.BlockDeviceMappingImage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateImageRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class CreateImageRequest {
  public static final String SERIALIZED_NAME_ARCHITECTURE = "Architecture";
  @SerializedName(SERIALIZED_NAME_ARCHITECTURE)
  private String architecture;

  public static final String SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS = "BlockDeviceMappings";
  @SerializedName(SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS)
  private List<BlockDeviceMappingImage> blockDeviceMappings = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_FILE_LOCATION = "FileLocation";
  @SerializedName(SERIALIZED_NAME_FILE_LOCATION)
  private String fileLocation;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "ImageName";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_NO_REBOOT = "NoReboot";
  @SerializedName(SERIALIZED_NAME_NO_REBOOT)
  private Boolean noReboot;

  public static final String SERIALIZED_NAME_ROOT_DEVICE_NAME = "RootDeviceName";
  @SerializedName(SERIALIZED_NAME_ROOT_DEVICE_NAME)
  private String rootDeviceName;

  public static final String SERIALIZED_NAME_SOURCE_IMAGE_ID = "SourceImageId";
  @SerializedName(SERIALIZED_NAME_SOURCE_IMAGE_ID)
  private String sourceImageId;

  public static final String SERIALIZED_NAME_SOURCE_REGION_NAME = "SourceRegionName";
  @SerializedName(SERIALIZED_NAME_SOURCE_REGION_NAME)
  private String sourceRegionName;

  public static final String SERIALIZED_NAME_VM_ID = "VmId";
  @SerializedName(SERIALIZED_NAME_VM_ID)
  private String vmId;


  public CreateImageRequest architecture(String architecture) {
    
    this.architecture = architecture;
    return this;
  }

   /**
   * The architecture of the OMI (by default, &#x60;i386&#x60; if you specified the &#x60;FileLocation&#x60; or &#x60;RootDeviceName&#x60; parameter).
   * @return architecture
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The architecture of the OMI (by default, `i386` if you specified the `FileLocation` or `RootDeviceName` parameter).")

  public String getArchitecture() {
    return architecture;
  }


  public void setArchitecture(String architecture) {
    this.architecture = architecture;
  }


  public CreateImageRequest blockDeviceMappings(List<BlockDeviceMappingImage> blockDeviceMappings) {
    
    this.blockDeviceMappings = blockDeviceMappings;
    return this;
  }

  public CreateImageRequest addBlockDeviceMappingsItem(BlockDeviceMappingImage blockDeviceMappingsItem) {
    if (this.blockDeviceMappings == null) {
      this.blockDeviceMappings = new ArrayList<BlockDeviceMappingImage>();
    }
    this.blockDeviceMappings.add(blockDeviceMappingsItem);
    return this;
  }

   /**
   * One or more block device mappings.
   * @return blockDeviceMappings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more block device mappings.")

  public List<BlockDeviceMappingImage> getBlockDeviceMappings() {
    return blockDeviceMappings;
  }


  public void setBlockDeviceMappings(List<BlockDeviceMappingImage> blockDeviceMappings) {
    this.blockDeviceMappings = blockDeviceMappings;
  }


  public CreateImageRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description for the new OMI.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for the new OMI.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreateImageRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public CreateImageRequest fileLocation(String fileLocation) {
    
    this.fileLocation = fileLocation;
    return this;
  }

   /**
   * The pre-signed URL of the OMI manifest file, or the full path to the OMI stored in a bucket. If you specify this parameter, a copy of the OMI is created in your account. You must specify only one of the following parameters: &#x60;FileLocation&#x60;, &#x60;RootDeviceName&#x60;, &#x60;SourceImageId&#x60; or &#x60;VmId&#x60;.
   * @return fileLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The pre-signed URL of the OMI manifest file, or the full path to the OMI stored in a bucket. If you specify this parameter, a copy of the OMI is created in your account. You must specify only one of the following parameters: `FileLocation`, `RootDeviceName`, `SourceImageId` or `VmId`.")

  public String getFileLocation() {
    return fileLocation;
  }


  public void setFileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
  }


  public CreateImageRequest imageName(String imageName) {
    
    this.imageName = imageName;
    return this;
  }

   /**
   * A unique name for the new OMI.&lt;br /&gt; Constraints: 3-128 alphanumeric characters, underscores (_), spaces ( ), parentheses (()), slashes (/), periods (.), or dashes (-).
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique name for the new OMI.<br /> Constraints: 3-128 alphanumeric characters, underscores (_), spaces ( ), parentheses (()), slashes (/), periods (.), or dashes (-).")

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    this.imageName = imageName;
  }


  public CreateImageRequest noReboot(Boolean noReboot) {
    
    this.noReboot = noReboot;
    return this;
  }

   /**
   * If false, the VM shuts down before creating the OMI and then reboots. If true, the VM does not.
   * @return noReboot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If false, the VM shuts down before creating the OMI and then reboots. If true, the VM does not.")

  public Boolean getNoReboot() {
    return noReboot;
  }


  public void setNoReboot(Boolean noReboot) {
    this.noReboot = noReboot;
  }


  public CreateImageRequest rootDeviceName(String rootDeviceName) {
    
    this.rootDeviceName = rootDeviceName;
    return this;
  }

   /**
   * The name of the root device. You must specify only one of the following parameters: &#x60;FileLocation&#x60;, &#x60;RootDeviceName&#x60;, &#x60;SourceImageId&#x60; or &#x60;VmId&#x60;.
   * @return rootDeviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the root device. You must specify only one of the following parameters: `FileLocation`, `RootDeviceName`, `SourceImageId` or `VmId`.")

  public String getRootDeviceName() {
    return rootDeviceName;
  }


  public void setRootDeviceName(String rootDeviceName) {
    this.rootDeviceName = rootDeviceName;
  }


  public CreateImageRequest sourceImageId(String sourceImageId) {
    
    this.sourceImageId = sourceImageId;
    return this;
  }

   /**
   * The ID of the OMI you want to copy. You must specify only one of the following parameters: &#x60;FileLocation&#x60;, &#x60;RootDeviceName&#x60;, &#x60;SourceImageId&#x60; or &#x60;VmId&#x60;.
   * @return sourceImageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the OMI you want to copy. You must specify only one of the following parameters: `FileLocation`, `RootDeviceName`, `SourceImageId` or `VmId`.")

  public String getSourceImageId() {
    return sourceImageId;
  }


  public void setSourceImageId(String sourceImageId) {
    this.sourceImageId = sourceImageId;
  }


  public CreateImageRequest sourceRegionName(String sourceRegionName) {
    
    this.sourceRegionName = sourceRegionName;
    return this;
  }

   /**
   * The name of the source Region, which must be the same as the Region of your account.
   * @return sourceRegionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the source Region, which must be the same as the Region of your account.")

  public String getSourceRegionName() {
    return sourceRegionName;
  }


  public void setSourceRegionName(String sourceRegionName) {
    this.sourceRegionName = sourceRegionName;
  }


  public CreateImageRequest vmId(String vmId) {
    
    this.vmId = vmId;
    return this;
  }

   /**
   * The ID of the VM from which you want to create the OMI. You must specify only one of the following parameters: &#x60;FileLocation&#x60;, &#x60;RootDeviceName&#x60;, &#x60;SourceImageId&#x60; or &#x60;VmId&#x60;.
   * @return vmId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the VM from which you want to create the OMI. You must specify only one of the following parameters: `FileLocation`, `RootDeviceName`, `SourceImageId` or `VmId`.")

  public String getVmId() {
    return vmId;
  }


  public void setVmId(String vmId) {
    this.vmId = vmId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateImageRequest createImageRequest = (CreateImageRequest) o;
    return Objects.equals(this.architecture, createImageRequest.architecture) &&
        Objects.equals(this.blockDeviceMappings, createImageRequest.blockDeviceMappings) &&
        Objects.equals(this.description, createImageRequest.description) &&
        Objects.equals(this.dryRun, createImageRequest.dryRun) &&
        Objects.equals(this.fileLocation, createImageRequest.fileLocation) &&
        Objects.equals(this.imageName, createImageRequest.imageName) &&
        Objects.equals(this.noReboot, createImageRequest.noReboot) &&
        Objects.equals(this.rootDeviceName, createImageRequest.rootDeviceName) &&
        Objects.equals(this.sourceImageId, createImageRequest.sourceImageId) &&
        Objects.equals(this.sourceRegionName, createImageRequest.sourceRegionName) &&
        Objects.equals(this.vmId, createImageRequest.vmId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(architecture, blockDeviceMappings, description, dryRun, fileLocation, imageName, noReboot, rootDeviceName, sourceImageId, sourceRegionName, vmId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateImageRequest {\n");
    sb.append("    architecture: ").append(toIndentedString(architecture)).append("\n");
    sb.append("    blockDeviceMappings: ").append(toIndentedString(blockDeviceMappings)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    fileLocation: ").append(toIndentedString(fileLocation)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    noReboot: ").append(toIndentedString(noReboot)).append("\n");
    sb.append("    rootDeviceName: ").append(toIndentedString(rootDeviceName)).append("\n");
    sb.append("    sourceImageId: ").append(toIndentedString(sourceImageId)).append("\n");
    sb.append("    sourceRegionName: ").append(toIndentedString(sourceRegionName)).append("\n");
    sb.append("    vmId: ").append(toIndentedString(vmId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

