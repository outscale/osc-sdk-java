/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LinkPrivateIpsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class LinkPrivateIpsRequest {
  public static final String SERIALIZED_NAME_ALLOW_RELINK = "AllowRelink";
  @SerializedName(SERIALIZED_NAME_ALLOW_RELINK)
  private Boolean allowRelink;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_NIC_ID = "NicId";
  @SerializedName(SERIALIZED_NAME_NIC_ID)
  private String nicId;

  public static final String SERIALIZED_NAME_PRIVATE_IPS = "PrivateIps";
  @SerializedName(SERIALIZED_NAME_PRIVATE_IPS)
  private List<String> privateIps = null;

  public static final String SERIALIZED_NAME_SECONDARY_PRIVATE_IP_COUNT = "SecondaryPrivateIpCount";
  @SerializedName(SERIALIZED_NAME_SECONDARY_PRIVATE_IP_COUNT)
  private Integer secondaryPrivateIpCount;


  public LinkPrivateIpsRequest allowRelink(Boolean allowRelink) {
    
    this.allowRelink = allowRelink;
    return this;
  }

   /**
   * If true, allows an IP that is already assigned to another NIC in the same Subnet to be assigned to the NIC you specified.
   * @return allowRelink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, allows an IP that is already assigned to another NIC in the same Subnet to be assigned to the NIC you specified.")

  public Boolean getAllowRelink() {
    return allowRelink;
  }


  public void setAllowRelink(Boolean allowRelink) {
    this.allowRelink = allowRelink;
  }


  public LinkPrivateIpsRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public LinkPrivateIpsRequest nicId(String nicId) {
    
    this.nicId = nicId;
    return this;
  }

   /**
   * The ID of the NIC.
   * @return nicId
  **/
  @ApiModelProperty(required = true, value = "The ID of the NIC.")

  public String getNicId() {
    return nicId;
  }


  public void setNicId(String nicId) {
    this.nicId = nicId;
  }


  public LinkPrivateIpsRequest privateIps(List<String> privateIps) {
    
    this.privateIps = privateIps;
    return this;
  }

  public LinkPrivateIpsRequest addPrivateIpsItem(String privateIpsItem) {
    if (this.privateIps == null) {
      this.privateIps = new ArrayList<String>();
    }
    this.privateIps.add(privateIpsItem);
    return this;
  }

   /**
   * The secondary private IP or IPs you want to assign to the NIC within the IP range of the Subnet.
   * @return privateIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The secondary private IP or IPs you want to assign to the NIC within the IP range of the Subnet.")

  public List<String> getPrivateIps() {
    return privateIps;
  }


  public void setPrivateIps(List<String> privateIps) {
    this.privateIps = privateIps;
  }


  public LinkPrivateIpsRequest secondaryPrivateIpCount(Integer secondaryPrivateIpCount) {
    
    this.secondaryPrivateIpCount = secondaryPrivateIpCount;
    return this;
  }

   /**
   * The number of secondary private IPs to assign to the NIC.
   * @return secondaryPrivateIpCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of secondary private IPs to assign to the NIC.")

  public Integer getSecondaryPrivateIpCount() {
    return secondaryPrivateIpCount;
  }


  public void setSecondaryPrivateIpCount(Integer secondaryPrivateIpCount) {
    this.secondaryPrivateIpCount = secondaryPrivateIpCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkPrivateIpsRequest linkPrivateIpsRequest = (LinkPrivateIpsRequest) o;
    return Objects.equals(this.allowRelink, linkPrivateIpsRequest.allowRelink) &&
        Objects.equals(this.dryRun, linkPrivateIpsRequest.dryRun) &&
        Objects.equals(this.nicId, linkPrivateIpsRequest.nicId) &&
        Objects.equals(this.privateIps, linkPrivateIpsRequest.privateIps) &&
        Objects.equals(this.secondaryPrivateIpCount, linkPrivateIpsRequest.secondaryPrivateIpCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowRelink, dryRun, nicId, privateIps, secondaryPrivateIpCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkPrivateIpsRequest {\n");
    sb.append("    allowRelink: ").append(toIndentedString(allowRelink)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    nicId: ").append(toIndentedString(nicId)).append("\n");
    sb.append("    privateIps: ").append(toIndentedString(privateIps)).append("\n");
    sb.append("    secondaryPrivateIpCount: ").append(toIndentedString(secondaryPrivateIpCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

