/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.PrivateIpLight;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the network interface card (NIC) when creating a virtual machine (VM).
 */
@ApiModel(description = "Information about the network interface card (NIC) when creating a virtual machine (VM).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class NicForVmCreation {
  public static final String SERIALIZED_NAME_DELETE_ON_VM_DELETION = "DeleteOnVmDeletion";
  @SerializedName(SERIALIZED_NAME_DELETE_ON_VM_DELETION)
  private Boolean deleteOnVmDeletion;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DEVICE_NUMBER = "DeviceNumber";
  @SerializedName(SERIALIZED_NAME_DEVICE_NUMBER)
  private Integer deviceNumber;

  public static final String SERIALIZED_NAME_NIC_ID = "NicId";
  @SerializedName(SERIALIZED_NAME_NIC_ID)
  private String nicId;

  public static final String SERIALIZED_NAME_PRIVATE_IPS = "PrivateIps";
  @SerializedName(SERIALIZED_NAME_PRIVATE_IPS)
  private List<PrivateIpLight> privateIps = null;

  public static final String SERIALIZED_NAME_SECONDARY_PRIVATE_IP_COUNT = "SecondaryPrivateIpCount";
  @SerializedName(SERIALIZED_NAME_SECONDARY_PRIVATE_IP_COUNT)
  private Integer secondaryPrivateIpCount;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "SecurityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List<String> securityGroupIds = null;

  public static final String SERIALIZED_NAME_SUBNET_ID = "SubnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;


  public NicForVmCreation deleteOnVmDeletion(Boolean deleteOnVmDeletion) {
    
    this.deleteOnVmDeletion = deleteOnVmDeletion;
    return this;
  }

   /**
   * If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](#updatenic).
   * @return deleteOnVmDeletion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](#updatenic).")

  public Boolean getDeleteOnVmDeletion() {
    return deleteOnVmDeletion;
  }


  public void setDeleteOnVmDeletion(Boolean deleteOnVmDeletion) {
    this.deleteOnVmDeletion = deleteOnVmDeletion;
  }


  public NicForVmCreation description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the NIC, if you are creating a NIC when creating the VM.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the NIC, if you are creating a NIC when creating the VM.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public NicForVmCreation deviceNumber(Integer deviceNumber) {
    
    this.deviceNumber = deviceNumber;
    return this;
  }

   /**
   * The index of the VM device for the NIC attachment (between &#x60;0&#x60; and &#x60;7&#x60;, both included). This parameter is required if you create a NIC when creating the VM.
   * @return deviceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The index of the VM device for the NIC attachment (between `0` and `7`, both included). This parameter is required if you create a NIC when creating the VM.")

  public Integer getDeviceNumber() {
    return deviceNumber;
  }


  public void setDeviceNumber(Integer deviceNumber) {
    this.deviceNumber = deviceNumber;
  }


  public NicForVmCreation nicId(String nicId) {
    
    this.nicId = nicId;
    return this;
  }

   /**
   * The ID of the NIC, if you are attaching an existing NIC when creating a VM.
   * @return nicId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the NIC, if you are attaching an existing NIC when creating a VM.")

  public String getNicId() {
    return nicId;
  }


  public void setNicId(String nicId) {
    this.nicId = nicId;
  }


  public NicForVmCreation privateIps(List<PrivateIpLight> privateIps) {
    
    this.privateIps = privateIps;
    return this;
  }

  public NicForVmCreation addPrivateIpsItem(PrivateIpLight privateIpsItem) {
    if (this.privateIps == null) {
      this.privateIps = new ArrayList<PrivateIpLight>();
    }
    this.privateIps.add(privateIpsItem);
    return this;
  }

   /**
   * One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
   * @return privateIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.")

  public List<PrivateIpLight> getPrivateIps() {
    return privateIps;
  }


  public void setPrivateIps(List<PrivateIpLight> privateIps) {
    this.privateIps = privateIps;
  }


  public NicForVmCreation secondaryPrivateIpCount(Integer secondaryPrivateIpCount) {
    
    this.secondaryPrivateIpCount = secondaryPrivateIpCount;
    return this;
  }

   /**
   * The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the &#x60;PrivateIps&#x60; parameter.
   * @return secondaryPrivateIpCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `PrivateIps` parameter.")

  public Integer getSecondaryPrivateIpCount() {
    return secondaryPrivateIpCount;
  }


  public void setSecondaryPrivateIpCount(Integer secondaryPrivateIpCount) {
    this.secondaryPrivateIpCount = secondaryPrivateIpCount;
  }


  public NicForVmCreation securityGroupIds(List<String> securityGroupIds) {
    
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  public NicForVmCreation addSecurityGroupIdsItem(String securityGroupIdsItem) {
    if (this.securityGroupIds == null) {
      this.securityGroupIds = new ArrayList<String>();
    }
    this.securityGroupIds.add(securityGroupIdsItem);
    return this;
  }

   /**
   * One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
   * @return securityGroupIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.")

  public List<String> getSecurityGroupIds() {
    return securityGroupIds;
  }


  public void setSecurityGroupIds(List<String> securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public NicForVmCreation subnetId(String subnetId) {
    
    this.subnetId = subnetId;
    return this;
  }

   /**
   * The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
   * @return subnetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.")

  public String getSubnetId() {
    return subnetId;
  }


  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NicForVmCreation nicForVmCreation = (NicForVmCreation) o;
    return Objects.equals(this.deleteOnVmDeletion, nicForVmCreation.deleteOnVmDeletion) &&
        Objects.equals(this.description, nicForVmCreation.description) &&
        Objects.equals(this.deviceNumber, nicForVmCreation.deviceNumber) &&
        Objects.equals(this.nicId, nicForVmCreation.nicId) &&
        Objects.equals(this.privateIps, nicForVmCreation.privateIps) &&
        Objects.equals(this.secondaryPrivateIpCount, nicForVmCreation.secondaryPrivateIpCount) &&
        Objects.equals(this.securityGroupIds, nicForVmCreation.securityGroupIds) &&
        Objects.equals(this.subnetId, nicForVmCreation.subnetId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteOnVmDeletion, description, deviceNumber, nicId, privateIps, secondaryPrivateIpCount, securityGroupIds, subnetId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NicForVmCreation {\n");
    sb.append("    deleteOnVmDeletion: ").append(toIndentedString(deleteOnVmDeletion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    deviceNumber: ").append(toIndentedString(deviceNumber)).append("\n");
    sb.append("    nicId: ").append(toIndentedString(nicId)).append("\n");
    sb.append("    privateIps: ").append(toIndentedString(privateIps)).append("\n");
    sb.append("    secondaryPrivateIpCount: ").append(toIndentedString(secondaryPrivateIpCount)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

