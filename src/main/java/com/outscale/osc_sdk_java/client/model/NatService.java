/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.PublicIpLight;
import com.outscale.osc_sdk_java.client.model.ResourceTag;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the NAT service.
 */
@ApiModel(description = "Information about the NAT service.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class NatService {
  public static final String SERIALIZED_NAME_NAT_SERVICE_ID = "NatServiceId";
  @SerializedName(SERIALIZED_NAME_NAT_SERVICE_ID)
  private String natServiceId;

  public static final String SERIALIZED_NAME_NET_ID = "NetId";
  @SerializedName(SERIALIZED_NAME_NET_ID)
  private String netId;

  public static final String SERIALIZED_NAME_PUBLIC_IPS = "PublicIps";
  @SerializedName(SERIALIZED_NAME_PUBLIC_IPS)
  private List<PublicIpLight> publicIps = null;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_SUBNET_ID = "SubnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<ResourceTag> tags = null;


  public NatService natServiceId(String natServiceId) {
    
    this.natServiceId = natServiceId;
    return this;
  }

   /**
   * The ID of the NAT service.
   * @return natServiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the NAT service.")

  public String getNatServiceId() {
    return natServiceId;
  }


  public void setNatServiceId(String natServiceId) {
    this.natServiceId = natServiceId;
  }


  public NatService netId(String netId) {
    
    this.netId = netId;
    return this;
  }

   /**
   * The ID of the Net in which the NAT service is.
   * @return netId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Net in which the NAT service is.")

  public String getNetId() {
    return netId;
  }


  public void setNetId(String netId) {
    this.netId = netId;
  }


  public NatService publicIps(List<PublicIpLight> publicIps) {
    
    this.publicIps = publicIps;
    return this;
  }

  public NatService addPublicIpsItem(PublicIpLight publicIpsItem) {
    if (this.publicIps == null) {
      this.publicIps = new ArrayList<PublicIpLight>();
    }
    this.publicIps.add(publicIpsItem);
    return this;
  }

   /**
   * Information about the public IP or IPs associated with the NAT service.
   * @return publicIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about the public IP or IPs associated with the NAT service.")

  public List<PublicIpLight> getPublicIps() {
    return publicIps;
  }


  public void setPublicIps(List<PublicIpLight> publicIps) {
    this.publicIps = publicIps;
  }


  public NatService state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * The state of the NAT service (&#x60;pending&#x60; \\| &#x60;available&#x60; \\| &#x60;deleting&#x60; \\| &#x60;deleted&#x60;).
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state of the NAT service (`pending` \\| `available` \\| `deleting` \\| `deleted`).")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public NatService subnetId(String subnetId) {
    
    this.subnetId = subnetId;
    return this;
  }

   /**
   * The ID of the Subnet in which the NAT service is.
   * @return subnetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Subnet in which the NAT service is.")

  public String getSubnetId() {
    return subnetId;
  }


  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public NatService tags(List<ResourceTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public NatService addTagsItem(ResourceTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ResourceTag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * One or more tags associated with the NAT service.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more tags associated with the NAT service.")

  public List<ResourceTag> getTags() {
    return tags;
  }


  public void setTags(List<ResourceTag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NatService natService = (NatService) o;
    return Objects.equals(this.natServiceId, natService.natServiceId) &&
        Objects.equals(this.netId, natService.netId) &&
        Objects.equals(this.publicIps, natService.publicIps) &&
        Objects.equals(this.state, natService.state) &&
        Objects.equals(this.subnetId, natService.subnetId) &&
        Objects.equals(this.tags, natService.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(natServiceId, netId, publicIps, state, subnetId, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NatService {\n");
    sb.append("    natServiceId: ").append(toIndentedString(natServiceId)).append("\n");
    sb.append("    netId: ").append(toIndentedString(netId)).append("\n");
    sb.append("    publicIps: ").append(toIndentedString(publicIps)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

