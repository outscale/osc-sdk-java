/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateAccountRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class CreateAccountRequest {
  public static final String SERIALIZED_NAME_ADDITIONAL_EMAILS = "AdditionalEmails";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_EMAILS)
  private List<String> additionalEmails = null;

  public static final String SERIALIZED_NAME_CITY = "City";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "CompanyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COUNTRY = "Country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "CustomerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_JOB_TITLE = "JobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MOBILE_NUMBER = "MobileNumber";
  @SerializedName(SERIALIZED_NAME_MOBILE_NUMBER)
  private String mobileNumber;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "PhoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_STATE_PROVINCE = "StateProvince";
  @SerializedName(SERIALIZED_NAME_STATE_PROVINCE)
  private String stateProvince;

  public static final String SERIALIZED_NAME_VAT_NUMBER = "VatNumber";
  @SerializedName(SERIALIZED_NAME_VAT_NUMBER)
  private String vatNumber;

  public static final String SERIALIZED_NAME_ZIP_CODE = "ZipCode";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private String zipCode;


  public CreateAccountRequest additionalEmails(List<String> additionalEmails) {
    
    this.additionalEmails = additionalEmails;
    return this;
  }

  public CreateAccountRequest addAdditionalEmailsItem(String additionalEmailsItem) {
    if (this.additionalEmails == null) {
      this.additionalEmails = new ArrayList<String>();
    }
    this.additionalEmails.add(additionalEmailsItem);
    return this;
  }

   /**
   * One or more additional email addresses for the account. These addresses are used for notifications only. If you already have a list of additional emails registered, you cannot add to it, only replace it. To remove all registered additional emails, specify an empty list.
   * @return additionalEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more additional email addresses for the account. These addresses are used for notifications only. If you already have a list of additional emails registered, you cannot add to it, only replace it. To remove all registered additional emails, specify an empty list.")

  public List<String> getAdditionalEmails() {
    return additionalEmails;
  }


  public void setAdditionalEmails(List<String> additionalEmails) {
    this.additionalEmails = additionalEmails;
  }


  public CreateAccountRequest city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * The city of the account owner.
   * @return city
  **/
  @ApiModelProperty(required = true, value = "The city of the account owner.")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public CreateAccountRequest companyName(String companyName) {
    
    this.companyName = companyName;
    return this;
  }

   /**
   * The name of the company for the account.
   * @return companyName
  **/
  @ApiModelProperty(required = true, value = "The name of the company for the account.")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public CreateAccountRequest country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * The country of the account owner.
   * @return country
  **/
  @ApiModelProperty(required = true, value = "The country of the account owner.")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public CreateAccountRequest customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * The ID of the customer. It must be 8 digits.
   * @return customerId
  **/
  @ApiModelProperty(required = true, value = "The ID of the customer. It must be 8 digits.")

  public String getCustomerId() {
    return customerId;
  }


  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public CreateAccountRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public CreateAccountRequest email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The main email address for the account. This address is used for your credentials and notifications.
   * @return email
  **/
  @ApiModelProperty(required = true, value = "The main email address for the account. This address is used for your credentials and notifications.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public CreateAccountRequest firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the account owner.
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "The first name of the account owner.")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public CreateAccountRequest jobTitle(String jobTitle) {
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * The job title of the account owner.
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The job title of the account owner.")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public CreateAccountRequest lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the account owner.
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "The last name of the account owner.")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public CreateAccountRequest mobileNumber(String mobileNumber) {
    
    this.mobileNumber = mobileNumber;
    return this;
  }

   /**
   * The mobile phone number of the account owner.
   * @return mobileNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The mobile phone number of the account owner.")

  public String getMobileNumber() {
    return mobileNumber;
  }


  public void setMobileNumber(String mobileNumber) {
    this.mobileNumber = mobileNumber;
  }


  public CreateAccountRequest phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The landline phone number of the account owner.
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The landline phone number of the account owner.")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public CreateAccountRequest stateProvince(String stateProvince) {
    
    this.stateProvince = stateProvince;
    return this;
  }

   /**
   * The state/province of the account.
   * @return stateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state/province of the account.")

  public String getStateProvince() {
    return stateProvince;
  }


  public void setStateProvince(String stateProvince) {
    this.stateProvince = stateProvince;
  }


  public CreateAccountRequest vatNumber(String vatNumber) {
    
    this.vatNumber = vatNumber;
    return this;
  }

   /**
   * The value added tax (VAT) number for the account.
   * @return vatNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value added tax (VAT) number for the account.")

  public String getVatNumber() {
    return vatNumber;
  }


  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }


  public CreateAccountRequest zipCode(String zipCode) {
    
    this.zipCode = zipCode;
    return this;
  }

   /**
   * The ZIP code of the city.
   * @return zipCode
  **/
  @ApiModelProperty(required = true, value = "The ZIP code of the city.")

  public String getZipCode() {
    return zipCode;
  }


  public void setZipCode(String zipCode) {
    this.zipCode = zipCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAccountRequest createAccountRequest = (CreateAccountRequest) o;
    return Objects.equals(this.additionalEmails, createAccountRequest.additionalEmails) &&
        Objects.equals(this.city, createAccountRequest.city) &&
        Objects.equals(this.companyName, createAccountRequest.companyName) &&
        Objects.equals(this.country, createAccountRequest.country) &&
        Objects.equals(this.customerId, createAccountRequest.customerId) &&
        Objects.equals(this.dryRun, createAccountRequest.dryRun) &&
        Objects.equals(this.email, createAccountRequest.email) &&
        Objects.equals(this.firstName, createAccountRequest.firstName) &&
        Objects.equals(this.jobTitle, createAccountRequest.jobTitle) &&
        Objects.equals(this.lastName, createAccountRequest.lastName) &&
        Objects.equals(this.mobileNumber, createAccountRequest.mobileNumber) &&
        Objects.equals(this.phoneNumber, createAccountRequest.phoneNumber) &&
        Objects.equals(this.stateProvince, createAccountRequest.stateProvince) &&
        Objects.equals(this.vatNumber, createAccountRequest.vatNumber) &&
        Objects.equals(this.zipCode, createAccountRequest.zipCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalEmails, city, companyName, country, customerId, dryRun, email, firstName, jobTitle, lastName, mobileNumber, phoneNumber, stateProvince, vatNumber, zipCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAccountRequest {\n");
    sb.append("    additionalEmails: ").append(toIndentedString(additionalEmails)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    mobileNumber: ").append(toIndentedString(mobileNumber)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    stateProvince: ").append(toIndentedString(stateProvince)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

