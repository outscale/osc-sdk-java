/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.MaintenanceEvent;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the states of the VMs.
 */
@ApiModel(description = "Information about the states of the VMs.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class VmStates {
  public static final String SERIALIZED_NAME_MAINTENANCE_EVENTS = "MaintenanceEvents";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_EVENTS)
  private List<MaintenanceEvent> maintenanceEvents = null;

  public static final String SERIALIZED_NAME_SUBREGION_NAME = "SubregionName";
  @SerializedName(SERIALIZED_NAME_SUBREGION_NAME)
  private String subregionName;

  public static final String SERIALIZED_NAME_VM_ID = "VmId";
  @SerializedName(SERIALIZED_NAME_VM_ID)
  private String vmId;

  public static final String SERIALIZED_NAME_VM_STATE = "VmState";
  @SerializedName(SERIALIZED_NAME_VM_STATE)
  private String vmState;


  public VmStates maintenanceEvents(List<MaintenanceEvent> maintenanceEvents) {
    
    this.maintenanceEvents = maintenanceEvents;
    return this;
  }

  public VmStates addMaintenanceEventsItem(MaintenanceEvent maintenanceEventsItem) {
    if (this.maintenanceEvents == null) {
      this.maintenanceEvents = new ArrayList<MaintenanceEvent>();
    }
    this.maintenanceEvents.add(maintenanceEventsItem);
    return this;
  }

   /**
   * One or more scheduled events associated with the VM.
   * @return maintenanceEvents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more scheduled events associated with the VM.")

  public List<MaintenanceEvent> getMaintenanceEvents() {
    return maintenanceEvents;
  }


  public void setMaintenanceEvents(List<MaintenanceEvent> maintenanceEvents) {
    this.maintenanceEvents = maintenanceEvents;
  }


  public VmStates subregionName(String subregionName) {
    
    this.subregionName = subregionName;
    return this;
  }

   /**
   * The name of the Subregion of the VM.
   * @return subregionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the Subregion of the VM.")

  public String getSubregionName() {
    return subregionName;
  }


  public void setSubregionName(String subregionName) {
    this.subregionName = subregionName;
  }


  public VmStates vmId(String vmId) {
    
    this.vmId = vmId;
    return this;
  }

   /**
   * The ID of the VM.
   * @return vmId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the VM.")

  public String getVmId() {
    return vmId;
  }


  public void setVmId(String vmId) {
    this.vmId = vmId;
  }


  public VmStates vmState(String vmState) {
    
    this.vmState = vmState;
    return this;
  }

   /**
   * The state of the VM (&#x60;pending&#x60; \\| &#x60;running&#x60; \\| &#x60;stopping&#x60; \\| &#x60;stopped&#x60; \\| &#x60;shutting-down&#x60; \\| &#x60;terminated&#x60; \\| &#x60;quarantine&#x60;).
   * @return vmState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).")

  public String getVmState() {
    return vmState;
  }


  public void setVmState(String vmState) {
    this.vmState = vmState;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VmStates vmStates = (VmStates) o;
    return Objects.equals(this.maintenanceEvents, vmStates.maintenanceEvents) &&
        Objects.equals(this.subregionName, vmStates.subregionName) &&
        Objects.equals(this.vmId, vmStates.vmId) &&
        Objects.equals(this.vmState, vmStates.vmState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maintenanceEvents, subregionName, vmId, vmState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VmStates {\n");
    sb.append("    maintenanceEvents: ").append(toIndentedString(maintenanceEvents)).append("\n");
    sb.append("    subregionName: ").append(toIndentedString(subregionName)).append("\n");
    sb.append("    vmId: ").append(toIndentedString(vmId)).append("\n");
    sb.append("    vmState: ").append(toIndentedString(vmState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

