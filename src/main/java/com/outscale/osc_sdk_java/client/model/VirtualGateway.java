/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.NetToVirtualGatewayLink;
import com.outscale.osc_sdk_java.client.model.ResourceTag;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the virtual gateway.
 */
@ApiModel(description = "Information about the virtual gateway.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class VirtualGateway {
  public static final String SERIALIZED_NAME_CONNECTION_TYPE = "ConnectionType";
  @SerializedName(SERIALIZED_NAME_CONNECTION_TYPE)
  private String connectionType;

  public static final String SERIALIZED_NAME_NET_TO_VIRTUAL_GATEWAY_LINKS = "NetToVirtualGatewayLinks";
  @SerializedName(SERIALIZED_NAME_NET_TO_VIRTUAL_GATEWAY_LINKS)
  private List<NetToVirtualGatewayLink> netToVirtualGatewayLinks = null;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<ResourceTag> tags = null;

  public static final String SERIALIZED_NAME_VIRTUAL_GATEWAY_ID = "VirtualGatewayId";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_GATEWAY_ID)
  private String virtualGatewayId;


  public VirtualGateway connectionType(String connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * The type of VPN connection supported by the virtual gateway (only &#x60;ipsec.1&#x60; is supported).
   * @return connectionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported).")

  public String getConnectionType() {
    return connectionType;
  }


  public void setConnectionType(String connectionType) {
    this.connectionType = connectionType;
  }


  public VirtualGateway netToVirtualGatewayLinks(List<NetToVirtualGatewayLink> netToVirtualGatewayLinks) {
    
    this.netToVirtualGatewayLinks = netToVirtualGatewayLinks;
    return this;
  }

  public VirtualGateway addNetToVirtualGatewayLinksItem(NetToVirtualGatewayLink netToVirtualGatewayLinksItem) {
    if (this.netToVirtualGatewayLinks == null) {
      this.netToVirtualGatewayLinks = new ArrayList<NetToVirtualGatewayLink>();
    }
    this.netToVirtualGatewayLinks.add(netToVirtualGatewayLinksItem);
    return this;
  }

   /**
   * The Net to which the virtual gateway is attached.
   * @return netToVirtualGatewayLinks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Net to which the virtual gateway is attached.")

  public List<NetToVirtualGatewayLink> getNetToVirtualGatewayLinks() {
    return netToVirtualGatewayLinks;
  }


  public void setNetToVirtualGatewayLinks(List<NetToVirtualGatewayLink> netToVirtualGatewayLinks) {
    this.netToVirtualGatewayLinks = netToVirtualGatewayLinks;
  }


  public VirtualGateway state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * The state of the virtual gateway (&#x60;pending&#x60; \\| &#x60;available&#x60; \\| &#x60;deleting&#x60; \\| &#x60;deleted&#x60;).
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state of the virtual gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`).")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public VirtualGateway tags(List<ResourceTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public VirtualGateway addTagsItem(ResourceTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ResourceTag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * One or more tags associated with the virtual gateway.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more tags associated with the virtual gateway.")

  public List<ResourceTag> getTags() {
    return tags;
  }


  public void setTags(List<ResourceTag> tags) {
    this.tags = tags;
  }


  public VirtualGateway virtualGatewayId(String virtualGatewayId) {
    
    this.virtualGatewayId = virtualGatewayId;
    return this;
  }

   /**
   * The ID of the virtual gateway.
   * @return virtualGatewayId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the virtual gateway.")

  public String getVirtualGatewayId() {
    return virtualGatewayId;
  }


  public void setVirtualGatewayId(String virtualGatewayId) {
    this.virtualGatewayId = virtualGatewayId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualGateway virtualGateway = (VirtualGateway) o;
    return Objects.equals(this.connectionType, virtualGateway.connectionType) &&
        Objects.equals(this.netToVirtualGatewayLinks, virtualGateway.netToVirtualGatewayLinks) &&
        Objects.equals(this.state, virtualGateway.state) &&
        Objects.equals(this.tags, virtualGateway.tags) &&
        Objects.equals(this.virtualGatewayId, virtualGateway.virtualGatewayId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionType, netToVirtualGatewayLinks, state, tags, virtualGatewayId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualGateway {\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    netToVirtualGatewayLinks: ").append(toIndentedString(netToVirtualGatewayLinks)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    virtualGatewayId: ").append(toIndentedString(virtualGatewayId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

