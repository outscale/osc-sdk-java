/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateDhcpOptionsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class CreateDhcpOptionsRequest {
  public static final String SERIALIZED_NAME_DOMAIN_NAME = "DomainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_DOMAIN_NAME_SERVERS = "DomainNameServers";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME_SERVERS)
  private List<String> domainNameServers = null;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_LOG_SERVERS = "LogServers";
  @SerializedName(SERIALIZED_NAME_LOG_SERVERS)
  private List<String> logServers = null;

  public static final String SERIALIZED_NAME_NTP_SERVERS = "NtpServers";
  @SerializedName(SERIALIZED_NAME_NTP_SERVERS)
  private List<String> ntpServers = null;


  public CreateDhcpOptionsRequest domainName(String domainName) {
    
    this.domainName = domainName;
    return this;
  }

   /**
   * Specify a domain name (for example, &#x60;MyCompany.com&#x60;). You can specify only one domain name. You must specify at least one of the following parameters: &#x60;DomainName&#x60;, &#x60;DomainNameServers&#x60;, &#x60;LogServers&#x60;, or &#x60;NtpServers&#x60;.
   * @return domainName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify a domain name (for example, `MyCompany.com`). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.")

  public String getDomainName() {
    return domainName;
  }


  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public CreateDhcpOptionsRequest domainNameServers(List<String> domainNameServers) {
    
    this.domainNameServers = domainNameServers;
    return this;
  }

  public CreateDhcpOptionsRequest addDomainNameServersItem(String domainNameServersItem) {
    if (this.domainNameServers == null) {
      this.domainNameServers = new ArrayList<String>();
    }
    this.domainNameServers.add(domainNameServersItem);
    return this;
  }

   /**
   * The IPs of domain name servers. If no IPs are specified, the &#x60;OutscaleProvidedDNS&#x60; value is set by default. You must specify at least one of the following parameters: &#x60;DomainName&#x60;, &#x60;DomainNameServers&#x60;, &#x60;LogServers&#x60;, or &#x60;NtpServers&#x60;.
   * @return domainNameServers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IPs of domain name servers. If no IPs are specified, the `OutscaleProvidedDNS` value is set by default. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.")

  public List<String> getDomainNameServers() {
    return domainNameServers;
  }


  public void setDomainNameServers(List<String> domainNameServers) {
    this.domainNameServers = domainNameServers;
  }


  public CreateDhcpOptionsRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public CreateDhcpOptionsRequest logServers(List<String> logServers) {
    
    this.logServers = logServers;
    return this;
  }

  public CreateDhcpOptionsRequest addLogServersItem(String logServersItem) {
    if (this.logServers == null) {
      this.logServers = new ArrayList<String>();
    }
    this.logServers.add(logServersItem);
    return this;
  }

   /**
   * The IPs of the log servers. You must specify at least one of the following parameters: &#x60;DomainName&#x60;, &#x60;DomainNameServers&#x60;, &#x60;LogServers&#x60;, or &#x60;NtpServers&#x60;.
   * @return logServers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IPs of the log servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.")

  public List<String> getLogServers() {
    return logServers;
  }


  public void setLogServers(List<String> logServers) {
    this.logServers = logServers;
  }


  public CreateDhcpOptionsRequest ntpServers(List<String> ntpServers) {
    
    this.ntpServers = ntpServers;
    return this;
  }

  public CreateDhcpOptionsRequest addNtpServersItem(String ntpServersItem) {
    if (this.ntpServers == null) {
      this.ntpServers = new ArrayList<String>();
    }
    this.ntpServers.add(ntpServersItem);
    return this;
  }

   /**
   * The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: &#x60;DomainName&#x60;, &#x60;DomainNameServers&#x60;, &#x60;LogServers&#x60;, or &#x60;NtpServers&#x60;.
   * @return ntpServers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.")

  public List<String> getNtpServers() {
    return ntpServers;
  }


  public void setNtpServers(List<String> ntpServers) {
    this.ntpServers = ntpServers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDhcpOptionsRequest createDhcpOptionsRequest = (CreateDhcpOptionsRequest) o;
    return Objects.equals(this.domainName, createDhcpOptionsRequest.domainName) &&
        Objects.equals(this.domainNameServers, createDhcpOptionsRequest.domainNameServers) &&
        Objects.equals(this.dryRun, createDhcpOptionsRequest.dryRun) &&
        Objects.equals(this.logServers, createDhcpOptionsRequest.logServers) &&
        Objects.equals(this.ntpServers, createDhcpOptionsRequest.ntpServers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domainName, domainNameServers, dryRun, logServers, ntpServers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDhcpOptionsRequest {\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    domainNameServers: ").append(toIndentedString(domainNameServers)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    logServers: ").append(toIndentedString(logServers)).append("\n");
    sb.append("    ntpServers: ").append(toIndentedString(ntpServers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

