/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CreateSnapshotRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class CreateSnapshotRequest {
  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_FILE_LOCATION = "FileLocation";
  @SerializedName(SERIALIZED_NAME_FILE_LOCATION)
  private String fileLocation;

  public static final String SERIALIZED_NAME_SNAPSHOT_SIZE = "SnapshotSize";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_SIZE)
  private Long snapshotSize;

  public static final String SERIALIZED_NAME_SOURCE_REGION_NAME = "SourceRegionName";
  @SerializedName(SERIALIZED_NAME_SOURCE_REGION_NAME)
  private String sourceRegionName;

  public static final String SERIALIZED_NAME_SOURCE_SNAPSHOT_ID = "SourceSnapshotId";
  @SerializedName(SERIALIZED_NAME_SOURCE_SNAPSHOT_ID)
  private String sourceSnapshotId;

  public static final String SERIALIZED_NAME_VOLUME_ID = "VolumeId";
  @SerializedName(SERIALIZED_NAME_VOLUME_ID)
  private String volumeId;


  public CreateSnapshotRequest description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description for the snapshot.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for the snapshot.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreateSnapshotRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public CreateSnapshotRequest fileLocation(String fileLocation) {
    
    this.fileLocation = fileLocation;
    return this;
  }

   /**
   * (When importing) The pre-signed URL of the snapshot you want to import, or the normal URL of the snapshot if you have permission on the OOS bucket. For more information, see [Configuring a Pre-signed URL](https://docs.outscale.com/en/userguide/Configuring-a-Pre-signed-URL.html) or [Managing Access to Your Buckets and Objects](https://docs.outscale.com/en/userguide/Managing-Access-to-Your-Buckets-and-Objects.html).
   * @return fileLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(When importing) The pre-signed URL of the snapshot you want to import, or the normal URL of the snapshot if you have permission on the OOS bucket. For more information, see [Configuring a Pre-signed URL](https://docs.outscale.com/en/userguide/Configuring-a-Pre-signed-URL.html) or [Managing Access to Your Buckets and Objects](https://docs.outscale.com/en/userguide/Managing-Access-to-Your-Buckets-and-Objects.html).")

  public String getFileLocation() {
    return fileLocation;
  }


  public void setFileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
  }


  public CreateSnapshotRequest snapshotSize(Long snapshotSize) {
    
    this.snapshotSize = snapshotSize;
    return this;
  }

   /**
   * (When importing) The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.
   * @return snapshotSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(When importing) The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.")

  public Long getSnapshotSize() {
    return snapshotSize;
  }


  public void setSnapshotSize(Long snapshotSize) {
    this.snapshotSize = snapshotSize;
  }


  public CreateSnapshotRequest sourceRegionName(String sourceRegionName) {
    
    this.sourceRegionName = sourceRegionName;
    return this;
  }

   /**
   * (When copying) The name of the source Region, which must be the same as the Region of your account.
   * @return sourceRegionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(When copying) The name of the source Region, which must be the same as the Region of your account.")

  public String getSourceRegionName() {
    return sourceRegionName;
  }


  public void setSourceRegionName(String sourceRegionName) {
    this.sourceRegionName = sourceRegionName;
  }


  public CreateSnapshotRequest sourceSnapshotId(String sourceSnapshotId) {
    
    this.sourceSnapshotId = sourceSnapshotId;
    return this;
  }

   /**
   * (When copying) The ID of the snapshot you want to copy.
   * @return sourceSnapshotId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(When copying) The ID of the snapshot you want to copy.")

  public String getSourceSnapshotId() {
    return sourceSnapshotId;
  }


  public void setSourceSnapshotId(String sourceSnapshotId) {
    this.sourceSnapshotId = sourceSnapshotId;
  }


  public CreateSnapshotRequest volumeId(String volumeId) {
    
    this.volumeId = volumeId;
    return this;
  }

   /**
   * (When creating) The ID of the volume you want to create a snapshot of.
   * @return volumeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "(When creating) The ID of the volume you want to create a snapshot of.")

  public String getVolumeId() {
    return volumeId;
  }


  public void setVolumeId(String volumeId) {
    this.volumeId = volumeId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSnapshotRequest createSnapshotRequest = (CreateSnapshotRequest) o;
    return Objects.equals(this.description, createSnapshotRequest.description) &&
        Objects.equals(this.dryRun, createSnapshotRequest.dryRun) &&
        Objects.equals(this.fileLocation, createSnapshotRequest.fileLocation) &&
        Objects.equals(this.snapshotSize, createSnapshotRequest.snapshotSize) &&
        Objects.equals(this.sourceRegionName, createSnapshotRequest.sourceRegionName) &&
        Objects.equals(this.sourceSnapshotId, createSnapshotRequest.sourceSnapshotId) &&
        Objects.equals(this.volumeId, createSnapshotRequest.volumeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, dryRun, fileLocation, snapshotSize, sourceRegionName, sourceSnapshotId, volumeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSnapshotRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    fileLocation: ").append(toIndentedString(fileLocation)).append("\n");
    sb.append("    snapshotSize: ").append(toIndentedString(snapshotSize)).append("\n");
    sb.append("    sourceRegionName: ").append(toIndentedString(sourceRegionName)).append("\n");
    sb.append("    sourceSnapshotId: ").append(toIndentedString(sourceSnapshotId)).append("\n");
    sb.append("    volumeId: ").append(toIndentedString(volumeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

