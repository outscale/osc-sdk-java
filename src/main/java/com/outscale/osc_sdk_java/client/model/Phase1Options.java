/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. 
 */
@ApiModel(description = "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class Phase1Options {
  public static final String SERIALIZED_NAME_DPD_TIMEOUT_ACTION = "DpdTimeoutAction";
  @SerializedName(SERIALIZED_NAME_DPD_TIMEOUT_ACTION)
  private String dpdTimeoutAction;

  public static final String SERIALIZED_NAME_DPD_TIMEOUT_SECONDS = "DpdTimeoutSeconds";
  @SerializedName(SERIALIZED_NAME_DPD_TIMEOUT_SECONDS)
  private Integer dpdTimeoutSeconds;

  public static final String SERIALIZED_NAME_IKE_VERSIONS = "IkeVersions";
  @SerializedName(SERIALIZED_NAME_IKE_VERSIONS)
  private List<String> ikeVersions = null;

  public static final String SERIALIZED_NAME_PHASE1_DH_GROUP_NUMBERS = "Phase1DhGroupNumbers";
  @SerializedName(SERIALIZED_NAME_PHASE1_DH_GROUP_NUMBERS)
  private List<Integer> phase1DhGroupNumbers = null;

  public static final String SERIALIZED_NAME_PHASE1_ENCRYPTION_ALGORITHMS = "Phase1EncryptionAlgorithms";
  @SerializedName(SERIALIZED_NAME_PHASE1_ENCRYPTION_ALGORITHMS)
  private List<String> phase1EncryptionAlgorithms = null;

  public static final String SERIALIZED_NAME_PHASE1_INTEGRITY_ALGORITHMS = "Phase1IntegrityAlgorithms";
  @SerializedName(SERIALIZED_NAME_PHASE1_INTEGRITY_ALGORITHMS)
  private List<String> phase1IntegrityAlgorithms = null;

  public static final String SERIALIZED_NAME_PHASE1_LIFETIME_SECONDS = "Phase1LifetimeSeconds";
  @SerializedName(SERIALIZED_NAME_PHASE1_LIFETIME_SECONDS)
  private Integer phase1LifetimeSeconds;

  public static final String SERIALIZED_NAME_REPLAY_WINDOW_SIZE = "ReplayWindowSize";
  @SerializedName(SERIALIZED_NAME_REPLAY_WINDOW_SIZE)
  private Integer replayWindowSize;

  public static final String SERIALIZED_NAME_STARTUP_ACTION = "StartupAction";
  @SerializedName(SERIALIZED_NAME_STARTUP_ACTION)
  private String startupAction;


  public Phase1Options dpdTimeoutAction(String dpdTimeoutAction) {
    
    this.dpdTimeoutAction = dpdTimeoutAction;
    return this;
  }

   /**
   * The action to carry out after a Dead Peer Detection (DPD) timeout occurs.
   * @return dpdTimeoutAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The action to carry out after a Dead Peer Detection (DPD) timeout occurs.")

  public String getDpdTimeoutAction() {
    return dpdTimeoutAction;
  }


  public void setDpdTimeoutAction(String dpdTimeoutAction) {
    this.dpdTimeoutAction = dpdTimeoutAction;
  }


  public Phase1Options dpdTimeoutSeconds(Integer dpdTimeoutSeconds) {
    
    this.dpdTimeoutSeconds = dpdTimeoutSeconds;
    return this;
  }

   /**
   * The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds.
   * @return dpdTimeoutSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds.")

  public Integer getDpdTimeoutSeconds() {
    return dpdTimeoutSeconds;
  }


  public void setDpdTimeoutSeconds(Integer dpdTimeoutSeconds) {
    this.dpdTimeoutSeconds = dpdTimeoutSeconds;
  }


  public Phase1Options ikeVersions(List<String> ikeVersions) {
    
    this.ikeVersions = ikeVersions;
    return this;
  }

  public Phase1Options addIkeVersionsItem(String ikeVersionsItem) {
    if (this.ikeVersions == null) {
      this.ikeVersions = new ArrayList<String>();
    }
    this.ikeVersions.add(ikeVersionsItem);
    return this;
  }

   /**
   * The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.
   * @return ikeVersions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.")

  public List<String> getIkeVersions() {
    return ikeVersions;
  }


  public void setIkeVersions(List<String> ikeVersions) {
    this.ikeVersions = ikeVersions;
  }


  public Phase1Options phase1DhGroupNumbers(List<Integer> phase1DhGroupNumbers) {
    
    this.phase1DhGroupNumbers = phase1DhGroupNumbers;
    return this;
  }

  public Phase1Options addPhase1DhGroupNumbersItem(Integer phase1DhGroupNumbersItem) {
    if (this.phase1DhGroupNumbers == null) {
      this.phase1DhGroupNumbers = new ArrayList<Integer>();
    }
    this.phase1DhGroupNumbers.add(phase1DhGroupNumbersItem);
    return this;
  }

   /**
   * The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.
   * @return phase1DhGroupNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.")

  public List<Integer> getPhase1DhGroupNumbers() {
    return phase1DhGroupNumbers;
  }


  public void setPhase1DhGroupNumbers(List<Integer> phase1DhGroupNumbers) {
    this.phase1DhGroupNumbers = phase1DhGroupNumbers;
  }


  public Phase1Options phase1EncryptionAlgorithms(List<String> phase1EncryptionAlgorithms) {
    
    this.phase1EncryptionAlgorithms = phase1EncryptionAlgorithms;
    return this;
  }

  public Phase1Options addPhase1EncryptionAlgorithmsItem(String phase1EncryptionAlgorithmsItem) {
    if (this.phase1EncryptionAlgorithms == null) {
      this.phase1EncryptionAlgorithms = new ArrayList<String>();
    }
    this.phase1EncryptionAlgorithms.add(phase1EncryptionAlgorithmsItem);
    return this;
  }

   /**
   * The encryption algorithms allowed for the VPN tunnel for phase 1.
   * @return phase1EncryptionAlgorithms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encryption algorithms allowed for the VPN tunnel for phase 1.")

  public List<String> getPhase1EncryptionAlgorithms() {
    return phase1EncryptionAlgorithms;
  }


  public void setPhase1EncryptionAlgorithms(List<String> phase1EncryptionAlgorithms) {
    this.phase1EncryptionAlgorithms = phase1EncryptionAlgorithms;
  }


  public Phase1Options phase1IntegrityAlgorithms(List<String> phase1IntegrityAlgorithms) {
    
    this.phase1IntegrityAlgorithms = phase1IntegrityAlgorithms;
    return this;
  }

  public Phase1Options addPhase1IntegrityAlgorithmsItem(String phase1IntegrityAlgorithmsItem) {
    if (this.phase1IntegrityAlgorithms == null) {
      this.phase1IntegrityAlgorithms = new ArrayList<String>();
    }
    this.phase1IntegrityAlgorithms.add(phase1IntegrityAlgorithmsItem);
    return this;
  }

   /**
   * The integrity algorithms allowed for the VPN tunnel for phase 1.
   * @return phase1IntegrityAlgorithms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The integrity algorithms allowed for the VPN tunnel for phase 1.")

  public List<String> getPhase1IntegrityAlgorithms() {
    return phase1IntegrityAlgorithms;
  }


  public void setPhase1IntegrityAlgorithms(List<String> phase1IntegrityAlgorithms) {
    this.phase1IntegrityAlgorithms = phase1IntegrityAlgorithms;
  }


  public Phase1Options phase1LifetimeSeconds(Integer phase1LifetimeSeconds) {
    
    this.phase1LifetimeSeconds = phase1LifetimeSeconds;
    return this;
  }

   /**
   * The lifetime for phase 1 of the IKE negotiation process, in seconds.
   * @return phase1LifetimeSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The lifetime for phase 1 of the IKE negotiation process, in seconds.")

  public Integer getPhase1LifetimeSeconds() {
    return phase1LifetimeSeconds;
  }


  public void setPhase1LifetimeSeconds(Integer phase1LifetimeSeconds) {
    this.phase1LifetimeSeconds = phase1LifetimeSeconds;
  }


  public Phase1Options replayWindowSize(Integer replayWindowSize) {
    
    this.replayWindowSize = replayWindowSize;
    return this;
  }

   /**
   * The number of packets in an IKE replay window.
   * @return replayWindowSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of packets in an IKE replay window.")

  public Integer getReplayWindowSize() {
    return replayWindowSize;
  }


  public void setReplayWindowSize(Integer replayWindowSize) {
    this.replayWindowSize = replayWindowSize;
  }


  public Phase1Options startupAction(String startupAction) {
    
    this.startupAction = startupAction;
    return this;
  }

   /**
   * The action to carry out when establishing tunnels for a VPN connection.
   * @return startupAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The action to carry out when establishing tunnels for a VPN connection.")

  public String getStartupAction() {
    return startupAction;
  }


  public void setStartupAction(String startupAction) {
    this.startupAction = startupAction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phase1Options phase1Options = (Phase1Options) o;
    return Objects.equals(this.dpdTimeoutAction, phase1Options.dpdTimeoutAction) &&
        Objects.equals(this.dpdTimeoutSeconds, phase1Options.dpdTimeoutSeconds) &&
        Objects.equals(this.ikeVersions, phase1Options.ikeVersions) &&
        Objects.equals(this.phase1DhGroupNumbers, phase1Options.phase1DhGroupNumbers) &&
        Objects.equals(this.phase1EncryptionAlgorithms, phase1Options.phase1EncryptionAlgorithms) &&
        Objects.equals(this.phase1IntegrityAlgorithms, phase1Options.phase1IntegrityAlgorithms) &&
        Objects.equals(this.phase1LifetimeSeconds, phase1Options.phase1LifetimeSeconds) &&
        Objects.equals(this.replayWindowSize, phase1Options.replayWindowSize) &&
        Objects.equals(this.startupAction, phase1Options.startupAction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dpdTimeoutAction, dpdTimeoutSeconds, ikeVersions, phase1DhGroupNumbers, phase1EncryptionAlgorithms, phase1IntegrityAlgorithms, phase1LifetimeSeconds, replayWindowSize, startupAction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phase1Options {\n");
    sb.append("    dpdTimeoutAction: ").append(toIndentedString(dpdTimeoutAction)).append("\n");
    sb.append("    dpdTimeoutSeconds: ").append(toIndentedString(dpdTimeoutSeconds)).append("\n");
    sb.append("    ikeVersions: ").append(toIndentedString(ikeVersions)).append("\n");
    sb.append("    phase1DhGroupNumbers: ").append(toIndentedString(phase1DhGroupNumbers)).append("\n");
    sb.append("    phase1EncryptionAlgorithms: ").append(toIndentedString(phase1EncryptionAlgorithms)).append("\n");
    sb.append("    phase1IntegrityAlgorithms: ").append(toIndentedString(phase1IntegrityAlgorithms)).append("\n");
    sb.append("    phase1LifetimeSeconds: ").append(toIndentedString(phase1LifetimeSeconds)).append("\n");
    sb.append("    replayWindowSize: ").append(toIndentedString(replayWindowSize)).append("\n");
    sb.append("    startupAction: ").append(toIndentedString(startupAction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

