/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.LinkRouteTable;
import com.outscale.osc_sdk_java.client.model.ResourceTag;
import com.outscale.osc_sdk_java.client.model.Route;
import com.outscale.osc_sdk_java.client.model.RoutePropagatingVirtualGateway;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Information about the route table.
 */
@ApiModel(description = "Information about the route table.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class RouteTable {
  public static final String SERIALIZED_NAME_LINK_ROUTE_TABLES = "LinkRouteTables";
  @SerializedName(SERIALIZED_NAME_LINK_ROUTE_TABLES)
  private List<LinkRouteTable> linkRouteTables = null;

  public static final String SERIALIZED_NAME_NET_ID = "NetId";
  @SerializedName(SERIALIZED_NAME_NET_ID)
  private String netId;

  public static final String SERIALIZED_NAME_ROUTE_PROPAGATING_VIRTUAL_GATEWAYS = "RoutePropagatingVirtualGateways";
  @SerializedName(SERIALIZED_NAME_ROUTE_PROPAGATING_VIRTUAL_GATEWAYS)
  private List<RoutePropagatingVirtualGateway> routePropagatingVirtualGateways = null;

  public static final String SERIALIZED_NAME_ROUTE_TABLE_ID = "RouteTableId";
  @SerializedName(SERIALIZED_NAME_ROUTE_TABLE_ID)
  private String routeTableId;

  public static final String SERIALIZED_NAME_ROUTES = "Routes";
  @SerializedName(SERIALIZED_NAME_ROUTES)
  private List<Route> routes = null;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<ResourceTag> tags = null;


  public RouteTable linkRouteTables(List<LinkRouteTable> linkRouteTables) {
    
    this.linkRouteTables = linkRouteTables;
    return this;
  }

  public RouteTable addLinkRouteTablesItem(LinkRouteTable linkRouteTablesItem) {
    if (this.linkRouteTables == null) {
      this.linkRouteTables = new ArrayList<LinkRouteTable>();
    }
    this.linkRouteTables.add(linkRouteTablesItem);
    return this;
  }

   /**
   * One or more associations between the route table and Subnets.
   * @return linkRouteTables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more associations between the route table and Subnets.")

  public List<LinkRouteTable> getLinkRouteTables() {
    return linkRouteTables;
  }


  public void setLinkRouteTables(List<LinkRouteTable> linkRouteTables) {
    this.linkRouteTables = linkRouteTables;
  }


  public RouteTable netId(String netId) {
    
    this.netId = netId;
    return this;
  }

   /**
   * The ID of the Net for the route table.
   * @return netId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Net for the route table.")

  public String getNetId() {
    return netId;
  }


  public void setNetId(String netId) {
    this.netId = netId;
  }


  public RouteTable routePropagatingVirtualGateways(List<RoutePropagatingVirtualGateway> routePropagatingVirtualGateways) {
    
    this.routePropagatingVirtualGateways = routePropagatingVirtualGateways;
    return this;
  }

  public RouteTable addRoutePropagatingVirtualGatewaysItem(RoutePropagatingVirtualGateway routePropagatingVirtualGatewaysItem) {
    if (this.routePropagatingVirtualGateways == null) {
      this.routePropagatingVirtualGateways = new ArrayList<RoutePropagatingVirtualGateway>();
    }
    this.routePropagatingVirtualGateways.add(routePropagatingVirtualGatewaysItem);
    return this;
  }

   /**
   * Information about virtual gateways propagating routes.
   * @return routePropagatingVirtualGateways
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information about virtual gateways propagating routes.")

  public List<RoutePropagatingVirtualGateway> getRoutePropagatingVirtualGateways() {
    return routePropagatingVirtualGateways;
  }


  public void setRoutePropagatingVirtualGateways(List<RoutePropagatingVirtualGateway> routePropagatingVirtualGateways) {
    this.routePropagatingVirtualGateways = routePropagatingVirtualGateways;
  }


  public RouteTable routeTableId(String routeTableId) {
    
    this.routeTableId = routeTableId;
    return this;
  }

   /**
   * The ID of the route table.
   * @return routeTableId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the route table.")

  public String getRouteTableId() {
    return routeTableId;
  }


  public void setRouteTableId(String routeTableId) {
    this.routeTableId = routeTableId;
  }


  public RouteTable routes(List<Route> routes) {
    
    this.routes = routes;
    return this;
  }

  public RouteTable addRoutesItem(Route routesItem) {
    if (this.routes == null) {
      this.routes = new ArrayList<Route>();
    }
    this.routes.add(routesItem);
    return this;
  }

   /**
   * One or more routes in the route table.
   * @return routes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more routes in the route table.")

  public List<Route> getRoutes() {
    return routes;
  }


  public void setRoutes(List<Route> routes) {
    this.routes = routes;
  }


  public RouteTable tags(List<ResourceTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public RouteTable addTagsItem(ResourceTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ResourceTag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * One or more tags associated with the route table.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more tags associated with the route table.")

  public List<ResourceTag> getTags() {
    return tags;
  }


  public void setTags(List<ResourceTag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteTable routeTable = (RouteTable) o;
    return Objects.equals(this.linkRouteTables, routeTable.linkRouteTables) &&
        Objects.equals(this.netId, routeTable.netId) &&
        Objects.equals(this.routePropagatingVirtualGateways, routeTable.routePropagatingVirtualGateways) &&
        Objects.equals(this.routeTableId, routeTable.routeTableId) &&
        Objects.equals(this.routes, routeTable.routes) &&
        Objects.equals(this.tags, routeTable.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkRouteTables, netId, routePropagatingVirtualGateways, routeTableId, routes, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteTable {\n");
    sb.append("    linkRouteTables: ").append(toIndentedString(linkRouteTables)).append("\n");
    sb.append("    netId: ").append(toIndentedString(netId)).append("\n");
    sb.append("    routePropagatingVirtualGateways: ").append(toIndentedString(routePropagatingVirtualGateways)).append("\n");
    sb.append("    routeTableId: ").append(toIndentedString(routeTableId)).append("\n");
    sb.append("    routes: ").append(toIndentedString(routes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

