/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * One or more filters.
 */
@ApiModel(description = "One or more filters.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class FiltersDhcpOptions {
  public static final String SERIALIZED_NAME_DEFAULT = "Default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  private Boolean _default;

  public static final String SERIALIZED_NAME_DHCP_OPTIONS_SET_IDS = "DhcpOptionsSetIds";
  @SerializedName(SERIALIZED_NAME_DHCP_OPTIONS_SET_IDS)
  private List<String> dhcpOptionsSetIds = null;

  public static final String SERIALIZED_NAME_DOMAIN_NAME_SERVERS = "DomainNameServers";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME_SERVERS)
  private List<String> domainNameServers = null;

  public static final String SERIALIZED_NAME_DOMAIN_NAMES = "DomainNames";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAMES)
  private List<String> domainNames = null;

  public static final String SERIALIZED_NAME_LOG_SERVERS = "LogServers";
  @SerializedName(SERIALIZED_NAME_LOG_SERVERS)
  private List<String> logServers = null;

  public static final String SERIALIZED_NAME_NTP_SERVERS = "NtpServers";
  @SerializedName(SERIALIZED_NAME_NTP_SERVERS)
  private List<String> ntpServers = null;

  public static final String SERIALIZED_NAME_TAG_KEYS = "TagKeys";
  @SerializedName(SERIALIZED_NAME_TAG_KEYS)
  private List<String> tagKeys = null;

  public static final String SERIALIZED_NAME_TAG_VALUES = "TagValues";
  @SerializedName(SERIALIZED_NAME_TAG_VALUES)
  private List<String> tagValues = null;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;


  public FiltersDhcpOptions _default(Boolean _default) {
    
    this._default = _default;
    return this;
  }

   /**
   * If true, lists all default DHCP options set. If false, lists all non-default DHCP options set.
   * @return _default
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, lists all default DHCP options set. If false, lists all non-default DHCP options set.")

  public Boolean getDefault() {
    return _default;
  }


  public void setDefault(Boolean _default) {
    this._default = _default;
  }


  public FiltersDhcpOptions dhcpOptionsSetIds(List<String> dhcpOptionsSetIds) {
    
    this.dhcpOptionsSetIds = dhcpOptionsSetIds;
    return this;
  }

  public FiltersDhcpOptions addDhcpOptionsSetIdsItem(String dhcpOptionsSetIdsItem) {
    if (this.dhcpOptionsSetIds == null) {
      this.dhcpOptionsSetIds = new ArrayList<String>();
    }
    this.dhcpOptionsSetIds.add(dhcpOptionsSetIdsItem);
    return this;
  }

   /**
   * The IDs of the DHCP options sets.
   * @return dhcpOptionsSetIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the DHCP options sets.")

  public List<String> getDhcpOptionsSetIds() {
    return dhcpOptionsSetIds;
  }


  public void setDhcpOptionsSetIds(List<String> dhcpOptionsSetIds) {
    this.dhcpOptionsSetIds = dhcpOptionsSetIds;
  }


  public FiltersDhcpOptions domainNameServers(List<String> domainNameServers) {
    
    this.domainNameServers = domainNameServers;
    return this;
  }

  public FiltersDhcpOptions addDomainNameServersItem(String domainNameServersItem) {
    if (this.domainNameServers == null) {
      this.domainNameServers = new ArrayList<String>();
    }
    this.domainNameServers.add(domainNameServersItem);
    return this;
  }

   /**
   * The IPs of the domain name servers used for the DHCP options sets.
   * @return domainNameServers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IPs of the domain name servers used for the DHCP options sets.")

  public List<String> getDomainNameServers() {
    return domainNameServers;
  }


  public void setDomainNameServers(List<String> domainNameServers) {
    this.domainNameServers = domainNameServers;
  }


  public FiltersDhcpOptions domainNames(List<String> domainNames) {
    
    this.domainNames = domainNames;
    return this;
  }

  public FiltersDhcpOptions addDomainNamesItem(String domainNamesItem) {
    if (this.domainNames == null) {
      this.domainNames = new ArrayList<String>();
    }
    this.domainNames.add(domainNamesItem);
    return this;
  }

   /**
   * The domain names used for the DHCP options sets.
   * @return domainNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The domain names used for the DHCP options sets.")

  public List<String> getDomainNames() {
    return domainNames;
  }


  public void setDomainNames(List<String> domainNames) {
    this.domainNames = domainNames;
  }


  public FiltersDhcpOptions logServers(List<String> logServers) {
    
    this.logServers = logServers;
    return this;
  }

  public FiltersDhcpOptions addLogServersItem(String logServersItem) {
    if (this.logServers == null) {
      this.logServers = new ArrayList<String>();
    }
    this.logServers.add(logServersItem);
    return this;
  }

   /**
   * The IPs of the log servers used for the DHCP options sets.
   * @return logServers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IPs of the log servers used for the DHCP options sets.")

  public List<String> getLogServers() {
    return logServers;
  }


  public void setLogServers(List<String> logServers) {
    this.logServers = logServers;
  }


  public FiltersDhcpOptions ntpServers(List<String> ntpServers) {
    
    this.ntpServers = ntpServers;
    return this;
  }

  public FiltersDhcpOptions addNtpServersItem(String ntpServersItem) {
    if (this.ntpServers == null) {
      this.ntpServers = new ArrayList<String>();
    }
    this.ntpServers.add(ntpServersItem);
    return this;
  }

   /**
   * The IPs of the Network Time Protocol (NTP) servers used for the DHCP options sets.
   * @return ntpServers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IPs of the Network Time Protocol (NTP) servers used for the DHCP options sets.")

  public List<String> getNtpServers() {
    return ntpServers;
  }


  public void setNtpServers(List<String> ntpServers) {
    this.ntpServers = ntpServers;
  }


  public FiltersDhcpOptions tagKeys(List<String> tagKeys) {
    
    this.tagKeys = tagKeys;
    return this;
  }

  public FiltersDhcpOptions addTagKeysItem(String tagKeysItem) {
    if (this.tagKeys == null) {
      this.tagKeys = new ArrayList<String>();
    }
    this.tagKeys.add(tagKeysItem);
    return this;
  }

   /**
   * The keys of the tags associated with the DHCP options sets.
   * @return tagKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The keys of the tags associated with the DHCP options sets.")

  public List<String> getTagKeys() {
    return tagKeys;
  }


  public void setTagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
  }


  public FiltersDhcpOptions tagValues(List<String> tagValues) {
    
    this.tagValues = tagValues;
    return this;
  }

  public FiltersDhcpOptions addTagValuesItem(String tagValuesItem) {
    if (this.tagValues == null) {
      this.tagValues = new ArrayList<String>();
    }
    this.tagValues.add(tagValuesItem);
    return this;
  }

   /**
   * The values of the tags associated with the DHCP options sets.
   * @return tagValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The values of the tags associated with the DHCP options sets.")

  public List<String> getTagValues() {
    return tagValues;
  }


  public void setTagValues(List<String> tagValues) {
    this.tagValues = tagValues;
  }


  public FiltersDhcpOptions tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public FiltersDhcpOptions addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The key/value combination of the tags associated with the DHCP options sets, in the following format: &amp;quot;Filters&amp;quot;:{&amp;quot;Tags&amp;quot;:[&amp;quot;TAGKEY&#x3D;TAGVALUE&amp;quot;]}.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key/value combination of the tags associated with the DHCP options sets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiltersDhcpOptions filtersDhcpOptions = (FiltersDhcpOptions) o;
    return Objects.equals(this._default, filtersDhcpOptions._default) &&
        Objects.equals(this.dhcpOptionsSetIds, filtersDhcpOptions.dhcpOptionsSetIds) &&
        Objects.equals(this.domainNameServers, filtersDhcpOptions.domainNameServers) &&
        Objects.equals(this.domainNames, filtersDhcpOptions.domainNames) &&
        Objects.equals(this.logServers, filtersDhcpOptions.logServers) &&
        Objects.equals(this.ntpServers, filtersDhcpOptions.ntpServers) &&
        Objects.equals(this.tagKeys, filtersDhcpOptions.tagKeys) &&
        Objects.equals(this.tagValues, filtersDhcpOptions.tagValues) &&
        Objects.equals(this.tags, filtersDhcpOptions.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_default, dhcpOptionsSetIds, domainNameServers, domainNames, logServers, ntpServers, tagKeys, tagValues, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiltersDhcpOptions {\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    dhcpOptionsSetIds: ").append(toIndentedString(dhcpOptionsSetIds)).append("\n");
    sb.append("    domainNameServers: ").append(toIndentedString(domainNameServers)).append("\n");
    sb.append("    domainNames: ").append(toIndentedString(domainNames)).append("\n");
    sb.append("    logServers: ").append(toIndentedString(logServers)).append("\n");
    sb.append("    ntpServers: ").append(toIndentedString(ntpServers)).append("\n");
    sb.append("    tagKeys: ").append(toIndentedString(tagKeys)).append("\n");
    sb.append("    tagValues: ").append(toIndentedString(tagValues)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

