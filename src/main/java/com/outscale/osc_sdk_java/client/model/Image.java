/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.outscale.osc_sdk_java.client.model.BlockDeviceMappingImage;
import com.outscale.osc_sdk_java.client.model.PermissionsOnResource;
import com.outscale.osc_sdk_java.client.model.ResourceTag;
import com.outscale.osc_sdk_java.client.model.StateComment;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * Information about the OMI.
 */
@ApiModel(description = "Information about the OMI.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class Image {
  public static final String SERIALIZED_NAME_ACCOUNT_ALIAS = "AccountAlias";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ALIAS)
  private String accountAlias;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ARCHITECTURE = "Architecture";
  @SerializedName(SERIALIZED_NAME_ARCHITECTURE)
  private String architecture;

  public static final String SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS = "BlockDeviceMappings";
  @SerializedName(SERIALIZED_NAME_BLOCK_DEVICE_MAPPINGS)
  private List<BlockDeviceMappingImage> blockDeviceMappings = null;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private LocalDate creationDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FILE_LOCATION = "FileLocation";
  @SerializedName(SERIALIZED_NAME_FILE_LOCATION)
  private String fileLocation;

  public static final String SERIALIZED_NAME_IMAGE_ID = "ImageId";
  @SerializedName(SERIALIZED_NAME_IMAGE_ID)
  private String imageId;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "ImageName";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_IMAGE_TYPE = "ImageType";
  @SerializedName(SERIALIZED_NAME_IMAGE_TYPE)
  private String imageType;

  public static final String SERIALIZED_NAME_PERMISSIONS_TO_LAUNCH = "PermissionsToLaunch";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_TO_LAUNCH)
  private PermissionsOnResource permissionsToLaunch;

  public static final String SERIALIZED_NAME_PRODUCT_CODES = "ProductCodes";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODES)
  private List<String> productCodes = null;

  public static final String SERIALIZED_NAME_ROOT_DEVICE_NAME = "RootDeviceName";
  @SerializedName(SERIALIZED_NAME_ROOT_DEVICE_NAME)
  private String rootDeviceName;

  public static final String SERIALIZED_NAME_ROOT_DEVICE_TYPE = "RootDeviceType";
  @SerializedName(SERIALIZED_NAME_ROOT_DEVICE_TYPE)
  private String rootDeviceType;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATE_COMMENT = "StateComment";
  @SerializedName(SERIALIZED_NAME_STATE_COMMENT)
  private StateComment stateComment;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<ResourceTag> tags = null;


  public Image accountAlias(String accountAlias) {
    
    this.accountAlias = accountAlias;
    return this;
  }

   /**
   * The account alias of the owner of the OMI.
   * @return accountAlias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account alias of the owner of the OMI.")

  public String getAccountAlias() {
    return accountAlias;
  }


  public void setAccountAlias(String accountAlias) {
    this.accountAlias = accountAlias;
  }


  public Image accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * The account ID of the owner of the OMI.
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account ID of the owner of the OMI.")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public Image architecture(String architecture) {
    
    this.architecture = architecture;
    return this;
  }

   /**
   * The architecture of the OMI (by default, &#x60;i386&#x60;).
   * @return architecture
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The architecture of the OMI (by default, `i386`).")

  public String getArchitecture() {
    return architecture;
  }


  public void setArchitecture(String architecture) {
    this.architecture = architecture;
  }


  public Image blockDeviceMappings(List<BlockDeviceMappingImage> blockDeviceMappings) {
    
    this.blockDeviceMappings = blockDeviceMappings;
    return this;
  }

  public Image addBlockDeviceMappingsItem(BlockDeviceMappingImage blockDeviceMappingsItem) {
    if (this.blockDeviceMappings == null) {
      this.blockDeviceMappings = new ArrayList<BlockDeviceMappingImage>();
    }
    this.blockDeviceMappings.add(blockDeviceMappingsItem);
    return this;
  }

   /**
   * One or more block device mappings.
   * @return blockDeviceMappings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more block device mappings.")

  public List<BlockDeviceMappingImage> getBlockDeviceMappings() {
    return blockDeviceMappings;
  }


  public void setBlockDeviceMappings(List<BlockDeviceMappingImage> blockDeviceMappings) {
    this.blockDeviceMappings = blockDeviceMappings;
  }


  public Image creationDate(LocalDate creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * The date and time at which the OMI was created.
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time at which the OMI was created.")

  public LocalDate getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(LocalDate creationDate) {
    this.creationDate = creationDate;
  }


  public Image description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the OMI.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the OMI.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Image fileLocation(String fileLocation) {
    
    this.fileLocation = fileLocation;
    return this;
  }

   /**
   * The location of the bucket where the OMI files are stored.
   * @return fileLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The location of the bucket where the OMI files are stored.")

  public String getFileLocation() {
    return fileLocation;
  }


  public void setFileLocation(String fileLocation) {
    this.fileLocation = fileLocation;
  }


  public Image imageId(String imageId) {
    
    this.imageId = imageId;
    return this;
  }

   /**
   * The ID of the OMI.
   * @return imageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the OMI.")

  public String getImageId() {
    return imageId;
  }


  public void setImageId(String imageId) {
    this.imageId = imageId;
  }


  public Image imageName(String imageName) {
    
    this.imageName = imageName;
    return this;
  }

   /**
   * The name of the OMI.
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the OMI.")

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    this.imageName = imageName;
  }


  public Image imageType(String imageType) {
    
    this.imageType = imageType;
    return this;
  }

   /**
   * The type of the OMI.
   * @return imageType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the OMI.")

  public String getImageType() {
    return imageType;
  }


  public void setImageType(String imageType) {
    this.imageType = imageType;
  }


  public Image permissionsToLaunch(PermissionsOnResource permissionsToLaunch) {
    
    this.permissionsToLaunch = permissionsToLaunch;
    return this;
  }

   /**
   * Get permissionsToLaunch
   * @return permissionsToLaunch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PermissionsOnResource getPermissionsToLaunch() {
    return permissionsToLaunch;
  }


  public void setPermissionsToLaunch(PermissionsOnResource permissionsToLaunch) {
    this.permissionsToLaunch = permissionsToLaunch;
  }


  public Image productCodes(List<String> productCodes) {
    
    this.productCodes = productCodes;
    return this;
  }

  public Image addProductCodesItem(String productCodesItem) {
    if (this.productCodes == null) {
      this.productCodes = new ArrayList<String>();
    }
    this.productCodes.add(productCodesItem);
    return this;
  }

   /**
   * The product code associated with the OMI (&#x60;0001&#x60; Linux/Unix \\| &#x60;0002&#x60; Windows \\| &#x60;0004&#x60; Linux/Oracle \\| &#x60;0005&#x60; Windows 10).
   * @return productCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).")

  public List<String> getProductCodes() {
    return productCodes;
  }


  public void setProductCodes(List<String> productCodes) {
    this.productCodes = productCodes;
  }


  public Image rootDeviceName(String rootDeviceName) {
    
    this.rootDeviceName = rootDeviceName;
    return this;
  }

   /**
   * The name of the root device.
   * @return rootDeviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the root device.")

  public String getRootDeviceName() {
    return rootDeviceName;
  }


  public void setRootDeviceName(String rootDeviceName) {
    this.rootDeviceName = rootDeviceName;
  }


  public Image rootDeviceType(String rootDeviceType) {
    
    this.rootDeviceType = rootDeviceType;
    return this;
  }

   /**
   * The type of root device used by the OMI (always &#x60;bsu&#x60;).
   * @return rootDeviceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of root device used by the OMI (always `bsu`).")

  public String getRootDeviceType() {
    return rootDeviceType;
  }


  public void setRootDeviceType(String rootDeviceType) {
    this.rootDeviceType = rootDeviceType;
  }


  public Image state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * The state of the OMI (&#x60;pending&#x60; \\| &#x60;available&#x60; \\| &#x60;failed&#x60;).
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state of the OMI (`pending` \\| `available` \\| `failed`).")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public Image stateComment(StateComment stateComment) {
    
    this.stateComment = stateComment;
    return this;
  }

   /**
   * Get stateComment
   * @return stateComment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StateComment getStateComment() {
    return stateComment;
  }


  public void setStateComment(StateComment stateComment) {
    this.stateComment = stateComment;
  }


  public Image tags(List<ResourceTag> tags) {
    
    this.tags = tags;
    return this;
  }

  public Image addTagsItem(ResourceTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ResourceTag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * One or more tags associated with the OMI.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One or more tags associated with the OMI.")

  public List<ResourceTag> getTags() {
    return tags;
  }


  public void setTags(List<ResourceTag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Image image = (Image) o;
    return Objects.equals(this.accountAlias, image.accountAlias) &&
        Objects.equals(this.accountId, image.accountId) &&
        Objects.equals(this.architecture, image.architecture) &&
        Objects.equals(this.blockDeviceMappings, image.blockDeviceMappings) &&
        Objects.equals(this.creationDate, image.creationDate) &&
        Objects.equals(this.description, image.description) &&
        Objects.equals(this.fileLocation, image.fileLocation) &&
        Objects.equals(this.imageId, image.imageId) &&
        Objects.equals(this.imageName, image.imageName) &&
        Objects.equals(this.imageType, image.imageType) &&
        Objects.equals(this.permissionsToLaunch, image.permissionsToLaunch) &&
        Objects.equals(this.productCodes, image.productCodes) &&
        Objects.equals(this.rootDeviceName, image.rootDeviceName) &&
        Objects.equals(this.rootDeviceType, image.rootDeviceType) &&
        Objects.equals(this.state, image.state) &&
        Objects.equals(this.stateComment, image.stateComment) &&
        Objects.equals(this.tags, image.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountAlias, accountId, architecture, blockDeviceMappings, creationDate, description, fileLocation, imageId, imageName, imageType, permissionsToLaunch, productCodes, rootDeviceName, rootDeviceType, state, stateComment, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Image {\n");
    sb.append("    accountAlias: ").append(toIndentedString(accountAlias)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    architecture: ").append(toIndentedString(architecture)).append("\n");
    sb.append("    blockDeviceMappings: ").append(toIndentedString(blockDeviceMappings)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fileLocation: ").append(toIndentedString(fileLocation)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("    permissionsToLaunch: ").append(toIndentedString(permissionsToLaunch)).append("\n");
    sb.append("    productCodes: ").append(toIndentedString(productCodes)).append("\n");
    sb.append("    rootDeviceName: ").append(toIndentedString(rootDeviceName)).append("\n");
    sb.append("    rootDeviceType: ").append(toIndentedString(rootDeviceType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateComment: ").append(toIndentedString(stateComment)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

