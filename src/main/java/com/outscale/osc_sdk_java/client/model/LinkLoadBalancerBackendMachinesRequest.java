/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LinkLoadBalancerBackendMachinesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class LinkLoadBalancerBackendMachinesRequest {
  public static final String SERIALIZED_NAME_BACKEND_IPS = "BackendIps";
  @SerializedName(SERIALIZED_NAME_BACKEND_IPS)
  private List<String> backendIps = null;

  public static final String SERIALIZED_NAME_BACKEND_VM_IDS = "BackendVmIds";
  @SerializedName(SERIALIZED_NAME_BACKEND_VM_IDS)
  private List<String> backendVmIds = null;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_LOAD_BALANCER_NAME = "LoadBalancerName";
  @SerializedName(SERIALIZED_NAME_LOAD_BALANCER_NAME)
  private String loadBalancerName;


  public LinkLoadBalancerBackendMachinesRequest backendIps(List<String> backendIps) {
    
    this.backendIps = backendIps;
    return this;
  }

  public LinkLoadBalancerBackendMachinesRequest addBackendIpsItem(String backendIpsItem) {
    if (this.backendIps == null) {
      this.backendIps = new ArrayList<String>();
    }
    this.backendIps.add(backendIpsItem);
    return this;
  }

   /**
   *  One or more public IPs of back-end VMs.
   * @return backendIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " One or more public IPs of back-end VMs.")

  public List<String> getBackendIps() {
    return backendIps;
  }


  public void setBackendIps(List<String> backendIps) {
    this.backendIps = backendIps;
  }


  public LinkLoadBalancerBackendMachinesRequest backendVmIds(List<String> backendVmIds) {
    
    this.backendVmIds = backendVmIds;
    return this;
  }

  public LinkLoadBalancerBackendMachinesRequest addBackendVmIdsItem(String backendVmIdsItem) {
    if (this.backendVmIds == null) {
      this.backendVmIds = new ArrayList<String>();
    }
    this.backendVmIds.add(backendVmIdsItem);
    return this;
  }

   /**
   *  One or more IDs of back-end VMs.
   * @return backendVmIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " One or more IDs of back-end VMs.")

  public List<String> getBackendVmIds() {
    return backendVmIds;
  }


  public void setBackendVmIds(List<String> backendVmIds) {
    this.backendVmIds = backendVmIds;
  }


  public LinkLoadBalancerBackendMachinesRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   *  If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public LinkLoadBalancerBackendMachinesRequest loadBalancerName(String loadBalancerName) {
    
    this.loadBalancerName = loadBalancerName;
    return this;
  }

   /**
   *  The name of the load balancer. 
   * @return loadBalancerName
  **/
  @ApiModelProperty(required = true, value = " The name of the load balancer. ")

  public String getLoadBalancerName() {
    return loadBalancerName;
  }


  public void setLoadBalancerName(String loadBalancerName) {
    this.loadBalancerName = loadBalancerName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkLoadBalancerBackendMachinesRequest linkLoadBalancerBackendMachinesRequest = (LinkLoadBalancerBackendMachinesRequest) o;
    return Objects.equals(this.backendIps, linkLoadBalancerBackendMachinesRequest.backendIps) &&
        Objects.equals(this.backendVmIds, linkLoadBalancerBackendMachinesRequest.backendVmIds) &&
        Objects.equals(this.dryRun, linkLoadBalancerBackendMachinesRequest.dryRun) &&
        Objects.equals(this.loadBalancerName, linkLoadBalancerBackendMachinesRequest.loadBalancerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backendIps, backendVmIds, dryRun, loadBalancerName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkLoadBalancerBackendMachinesRequest {\n");
    sb.append("    backendIps: ").append(toIndentedString(backendIps)).append("\n");
    sb.append("    backendVmIds: ").append(toIndentedString(backendVmIds)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    loadBalancerName: ").append(toIndentedString(loadBalancerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

