/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * One or more filters.
 */
@ApiModel(description = "One or more filters.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class FiltersNet {
  public static final String SERIALIZED_NAME_DHCP_OPTIONS_SET_IDS = "DhcpOptionsSetIds";
  @SerializedName(SERIALIZED_NAME_DHCP_OPTIONS_SET_IDS)
  private List<String> dhcpOptionsSetIds = null;

  public static final String SERIALIZED_NAME_IP_RANGES = "IpRanges";
  @SerializedName(SERIALIZED_NAME_IP_RANGES)
  private List<String> ipRanges = null;

  public static final String SERIALIZED_NAME_IS_DEFAULT = "IsDefault";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
  private Boolean isDefault;

  public static final String SERIALIZED_NAME_NET_IDS = "NetIds";
  @SerializedName(SERIALIZED_NAME_NET_IDS)
  private List<String> netIds = null;

  public static final String SERIALIZED_NAME_STATES = "States";
  @SerializedName(SERIALIZED_NAME_STATES)
  private List<String> states = null;

  public static final String SERIALIZED_NAME_TAG_KEYS = "TagKeys";
  @SerializedName(SERIALIZED_NAME_TAG_KEYS)
  private List<String> tagKeys = null;

  public static final String SERIALIZED_NAME_TAG_VALUES = "TagValues";
  @SerializedName(SERIALIZED_NAME_TAG_VALUES)
  private List<String> tagValues = null;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;


  public FiltersNet dhcpOptionsSetIds(List<String> dhcpOptionsSetIds) {
    
    this.dhcpOptionsSetIds = dhcpOptionsSetIds;
    return this;
  }

  public FiltersNet addDhcpOptionsSetIdsItem(String dhcpOptionsSetIdsItem) {
    if (this.dhcpOptionsSetIds == null) {
      this.dhcpOptionsSetIds = new ArrayList<String>();
    }
    this.dhcpOptionsSetIds.add(dhcpOptionsSetIdsItem);
    return this;
  }

   /**
   * The IDs of the DHCP options sets.
   * @return dhcpOptionsSetIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the DHCP options sets.")

  public List<String> getDhcpOptionsSetIds() {
    return dhcpOptionsSetIds;
  }


  public void setDhcpOptionsSetIds(List<String> dhcpOptionsSetIds) {
    this.dhcpOptionsSetIds = dhcpOptionsSetIds;
  }


  public FiltersNet ipRanges(List<String> ipRanges) {
    
    this.ipRanges = ipRanges;
    return this;
  }

  public FiltersNet addIpRangesItem(String ipRangesItem) {
    if (this.ipRanges == null) {
      this.ipRanges = new ArrayList<String>();
    }
    this.ipRanges.add(ipRangesItem);
    return this;
  }

   /**
   * The IP ranges for the Nets, in CIDR notation (for example, &#x60;10.0.0.0/16&#x60;).
   * @return ipRanges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IP ranges for the Nets, in CIDR notation (for example, `10.0.0.0/16`).")

  public List<String> getIpRanges() {
    return ipRanges;
  }


  public void setIpRanges(List<String> ipRanges) {
    this.ipRanges = ipRanges;
  }


  public FiltersNet isDefault(Boolean isDefault) {
    
    this.isDefault = isDefault;
    return this;
  }

   /**
   * If true, the Net used is the default one.
   * @return isDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the Net used is the default one.")

  public Boolean getIsDefault() {
    return isDefault;
  }


  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public FiltersNet netIds(List<String> netIds) {
    
    this.netIds = netIds;
    return this;
  }

  public FiltersNet addNetIdsItem(String netIdsItem) {
    if (this.netIds == null) {
      this.netIds = new ArrayList<String>();
    }
    this.netIds.add(netIdsItem);
    return this;
  }

   /**
   * The IDs of the Nets.
   * @return netIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the Nets.")

  public List<String> getNetIds() {
    return netIds;
  }


  public void setNetIds(List<String> netIds) {
    this.netIds = netIds;
  }


  public FiltersNet states(List<String> states) {
    
    this.states = states;
    return this;
  }

  public FiltersNet addStatesItem(String statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<String>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * The states of the Nets (&#x60;pending&#x60; \\| &#x60;available&#x60; \\| &#x60;deleted&#x60;).
   * @return states
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The states of the Nets (`pending` \\| `available` \\| `deleted`).")

  public List<String> getStates() {
    return states;
  }


  public void setStates(List<String> states) {
    this.states = states;
  }


  public FiltersNet tagKeys(List<String> tagKeys) {
    
    this.tagKeys = tagKeys;
    return this;
  }

  public FiltersNet addTagKeysItem(String tagKeysItem) {
    if (this.tagKeys == null) {
      this.tagKeys = new ArrayList<String>();
    }
    this.tagKeys.add(tagKeysItem);
    return this;
  }

   /**
   * The keys of the tags associated with the Nets.
   * @return tagKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The keys of the tags associated with the Nets.")

  public List<String> getTagKeys() {
    return tagKeys;
  }


  public void setTagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
  }


  public FiltersNet tagValues(List<String> tagValues) {
    
    this.tagValues = tagValues;
    return this;
  }

  public FiltersNet addTagValuesItem(String tagValuesItem) {
    if (this.tagValues == null) {
      this.tagValues = new ArrayList<String>();
    }
    this.tagValues.add(tagValuesItem);
    return this;
  }

   /**
   * The values of the tags associated with the Nets.
   * @return tagValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The values of the tags associated with the Nets.")

  public List<String> getTagValues() {
    return tagValues;
  }


  public void setTagValues(List<String> tagValues) {
    this.tagValues = tagValues;
  }


  public FiltersNet tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public FiltersNet addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The key/value combination of the tags associated with the Nets, in the following format: &amp;quot;Filters&amp;quot;:{&amp;quot;Tags&amp;quot;:[&amp;quot;TAGKEY&#x3D;TAGVALUE&amp;quot;]}.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key/value combination of the tags associated with the Nets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiltersNet filtersNet = (FiltersNet) o;
    return Objects.equals(this.dhcpOptionsSetIds, filtersNet.dhcpOptionsSetIds) &&
        Objects.equals(this.ipRanges, filtersNet.ipRanges) &&
        Objects.equals(this.isDefault, filtersNet.isDefault) &&
        Objects.equals(this.netIds, filtersNet.netIds) &&
        Objects.equals(this.states, filtersNet.states) &&
        Objects.equals(this.tagKeys, filtersNet.tagKeys) &&
        Objects.equals(this.tagValues, filtersNet.tagValues) &&
        Objects.equals(this.tags, filtersNet.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dhcpOptionsSetIds, ipRanges, isDefault, netIds, states, tagKeys, tagValues, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiltersNet {\n");
    sb.append("    dhcpOptionsSetIds: ").append(toIndentedString(dhcpOptionsSetIds)).append("\n");
    sb.append("    ipRanges: ").append(toIndentedString(ipRanges)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    netIds: ").append(toIndentedString(netIds)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    tagKeys: ").append(toIndentedString(tagKeys)).append("\n");
    sb.append("    tagValues: ").append(toIndentedString(tagValues)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

