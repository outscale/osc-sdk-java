/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * One or more filters.
 */
@ApiModel(description = "One or more filters.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class FiltersSnapshot {
  public static final String SERIALIZED_NAME_ACCOUNT_ALIASES = "AccountAliases";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ALIASES)
  private List<String> accountAliases = null;

  public static final String SERIALIZED_NAME_ACCOUNT_IDS = "AccountIds";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDS)
  private List<String> accountIds = null;

  public static final String SERIALIZED_NAME_DESCRIPTIONS = "Descriptions";
  @SerializedName(SERIALIZED_NAME_DESCRIPTIONS)
  private List<String> descriptions = null;

  public static final String SERIALIZED_NAME_PERMISSIONS_TO_CREATE_VOLUME_ACCOUNT_IDS = "PermissionsToCreateVolumeAccountIds";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_TO_CREATE_VOLUME_ACCOUNT_IDS)
  private List<String> permissionsToCreateVolumeAccountIds = null;

  public static final String SERIALIZED_NAME_PERMISSIONS_TO_CREATE_VOLUME_GLOBAL_PERMISSION = "PermissionsToCreateVolumeGlobalPermission";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS_TO_CREATE_VOLUME_GLOBAL_PERMISSION)
  private Boolean permissionsToCreateVolumeGlobalPermission;

  public static final String SERIALIZED_NAME_PROGRESSES = "Progresses";
  @SerializedName(SERIALIZED_NAME_PROGRESSES)
  private List<Integer> progresses = null;

  public static final String SERIALIZED_NAME_SNAPSHOT_IDS = "SnapshotIds";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_IDS)
  private List<String> snapshotIds = null;

  public static final String SERIALIZED_NAME_STATES = "States";
  @SerializedName(SERIALIZED_NAME_STATES)
  private List<String> states = null;

  public static final String SERIALIZED_NAME_TAG_KEYS = "TagKeys";
  @SerializedName(SERIALIZED_NAME_TAG_KEYS)
  private List<String> tagKeys = null;

  public static final String SERIALIZED_NAME_TAG_VALUES = "TagValues";
  @SerializedName(SERIALIZED_NAME_TAG_VALUES)
  private List<String> tagValues = null;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_VOLUME_IDS = "VolumeIds";
  @SerializedName(SERIALIZED_NAME_VOLUME_IDS)
  private List<String> volumeIds = null;

  public static final String SERIALIZED_NAME_VOLUME_SIZES = "VolumeSizes";
  @SerializedName(SERIALIZED_NAME_VOLUME_SIZES)
  private List<Integer> volumeSizes = null;


  public FiltersSnapshot accountAliases(List<String> accountAliases) {
    
    this.accountAliases = accountAliases;
    return this;
  }

  public FiltersSnapshot addAccountAliasesItem(String accountAliasesItem) {
    if (this.accountAliases == null) {
      this.accountAliases = new ArrayList<String>();
    }
    this.accountAliases.add(accountAliasesItem);
    return this;
  }

   /**
   * The account aliases of the owners of the snapshots.
   * @return accountAliases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account aliases of the owners of the snapshots.")

  public List<String> getAccountAliases() {
    return accountAliases;
  }


  public void setAccountAliases(List<String> accountAliases) {
    this.accountAliases = accountAliases;
  }


  public FiltersSnapshot accountIds(List<String> accountIds) {
    
    this.accountIds = accountIds;
    return this;
  }

  public FiltersSnapshot addAccountIdsItem(String accountIdsItem) {
    if (this.accountIds == null) {
      this.accountIds = new ArrayList<String>();
    }
    this.accountIds.add(accountIdsItem);
    return this;
  }

   /**
   * The account IDs of the owners of the snapshots.
   * @return accountIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account IDs of the owners of the snapshots.")

  public List<String> getAccountIds() {
    return accountIds;
  }


  public void setAccountIds(List<String> accountIds) {
    this.accountIds = accountIds;
  }


  public FiltersSnapshot descriptions(List<String> descriptions) {
    
    this.descriptions = descriptions;
    return this;
  }

  public FiltersSnapshot addDescriptionsItem(String descriptionsItem) {
    if (this.descriptions == null) {
      this.descriptions = new ArrayList<String>();
    }
    this.descriptions.add(descriptionsItem);
    return this;
  }

   /**
   * The descriptions of the snapshots.
   * @return descriptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The descriptions of the snapshots.")

  public List<String> getDescriptions() {
    return descriptions;
  }


  public void setDescriptions(List<String> descriptions) {
    this.descriptions = descriptions;
  }


  public FiltersSnapshot permissionsToCreateVolumeAccountIds(List<String> permissionsToCreateVolumeAccountIds) {
    
    this.permissionsToCreateVolumeAccountIds = permissionsToCreateVolumeAccountIds;
    return this;
  }

  public FiltersSnapshot addPermissionsToCreateVolumeAccountIdsItem(String permissionsToCreateVolumeAccountIdsItem) {
    if (this.permissionsToCreateVolumeAccountIds == null) {
      this.permissionsToCreateVolumeAccountIds = new ArrayList<String>();
    }
    this.permissionsToCreateVolumeAccountIds.add(permissionsToCreateVolumeAccountIdsItem);
    return this;
  }

   /**
   * The account IDs of one or more users who have permissions to create volumes.
   * @return permissionsToCreateVolumeAccountIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The account IDs of one or more users who have permissions to create volumes.")

  public List<String> getPermissionsToCreateVolumeAccountIds() {
    return permissionsToCreateVolumeAccountIds;
  }


  public void setPermissionsToCreateVolumeAccountIds(List<String> permissionsToCreateVolumeAccountIds) {
    this.permissionsToCreateVolumeAccountIds = permissionsToCreateVolumeAccountIds;
  }


  public FiltersSnapshot permissionsToCreateVolumeGlobalPermission(Boolean permissionsToCreateVolumeGlobalPermission) {
    
    this.permissionsToCreateVolumeGlobalPermission = permissionsToCreateVolumeGlobalPermission;
    return this;
  }

   /**
   * If true, lists all public volumes. If false, lists all private volumes.
   * @return permissionsToCreateVolumeGlobalPermission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, lists all public volumes. If false, lists all private volumes.")

  public Boolean getPermissionsToCreateVolumeGlobalPermission() {
    return permissionsToCreateVolumeGlobalPermission;
  }


  public void setPermissionsToCreateVolumeGlobalPermission(Boolean permissionsToCreateVolumeGlobalPermission) {
    this.permissionsToCreateVolumeGlobalPermission = permissionsToCreateVolumeGlobalPermission;
  }


  public FiltersSnapshot progresses(List<Integer> progresses) {
    
    this.progresses = progresses;
    return this;
  }

  public FiltersSnapshot addProgressesItem(Integer progressesItem) {
    if (this.progresses == null) {
      this.progresses = new ArrayList<Integer>();
    }
    this.progresses.add(progressesItem);
    return this;
  }

   /**
   * The progresses of the snapshots, as a percentage.
   * @return progresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The progresses of the snapshots, as a percentage.")

  public List<Integer> getProgresses() {
    return progresses;
  }


  public void setProgresses(List<Integer> progresses) {
    this.progresses = progresses;
  }


  public FiltersSnapshot snapshotIds(List<String> snapshotIds) {
    
    this.snapshotIds = snapshotIds;
    return this;
  }

  public FiltersSnapshot addSnapshotIdsItem(String snapshotIdsItem) {
    if (this.snapshotIds == null) {
      this.snapshotIds = new ArrayList<String>();
    }
    this.snapshotIds.add(snapshotIdsItem);
    return this;
  }

   /**
   * The IDs of the snapshots.
   * @return snapshotIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the snapshots.")

  public List<String> getSnapshotIds() {
    return snapshotIds;
  }


  public void setSnapshotIds(List<String> snapshotIds) {
    this.snapshotIds = snapshotIds;
  }


  public FiltersSnapshot states(List<String> states) {
    
    this.states = states;
    return this;
  }

  public FiltersSnapshot addStatesItem(String statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<String>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * The states of the snapshots (&#x60;in-queue&#x60; \\| &#x60;completed&#x60; \\| &#x60;error&#x60;).
   * @return states
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The states of the snapshots (`in-queue` \\| `completed` \\| `error`).")

  public List<String> getStates() {
    return states;
  }


  public void setStates(List<String> states) {
    this.states = states;
  }


  public FiltersSnapshot tagKeys(List<String> tagKeys) {
    
    this.tagKeys = tagKeys;
    return this;
  }

  public FiltersSnapshot addTagKeysItem(String tagKeysItem) {
    if (this.tagKeys == null) {
      this.tagKeys = new ArrayList<String>();
    }
    this.tagKeys.add(tagKeysItem);
    return this;
  }

   /**
   * The keys of the tags associated with the snapshots.
   * @return tagKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The keys of the tags associated with the snapshots.")

  public List<String> getTagKeys() {
    return tagKeys;
  }


  public void setTagKeys(List<String> tagKeys) {
    this.tagKeys = tagKeys;
  }


  public FiltersSnapshot tagValues(List<String> tagValues) {
    
    this.tagValues = tagValues;
    return this;
  }

  public FiltersSnapshot addTagValuesItem(String tagValuesItem) {
    if (this.tagValues == null) {
      this.tagValues = new ArrayList<String>();
    }
    this.tagValues.add(tagValuesItem);
    return this;
  }

   /**
   * The values of the tags associated with the snapshots.
   * @return tagValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The values of the tags associated with the snapshots.")

  public List<String> getTagValues() {
    return tagValues;
  }


  public void setTagValues(List<String> tagValues) {
    this.tagValues = tagValues;
  }


  public FiltersSnapshot tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public FiltersSnapshot addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * The key/value combination of the tags associated with the snapshots, in the following format: &amp;quot;Filters&amp;quot;:{&amp;quot;Tags&amp;quot;:[&amp;quot;TAGKEY&#x3D;TAGVALUE&amp;quot;]}.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key/value combination of the tags associated with the snapshots, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public FiltersSnapshot volumeIds(List<String> volumeIds) {
    
    this.volumeIds = volumeIds;
    return this;
  }

  public FiltersSnapshot addVolumeIdsItem(String volumeIdsItem) {
    if (this.volumeIds == null) {
      this.volumeIds = new ArrayList<String>();
    }
    this.volumeIds.add(volumeIdsItem);
    return this;
  }

   /**
   * The IDs of the volumes used to create the snapshots.
   * @return volumeIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the volumes used to create the snapshots.")

  public List<String> getVolumeIds() {
    return volumeIds;
  }


  public void setVolumeIds(List<String> volumeIds) {
    this.volumeIds = volumeIds;
  }


  public FiltersSnapshot volumeSizes(List<Integer> volumeSizes) {
    
    this.volumeSizes = volumeSizes;
    return this;
  }

  public FiltersSnapshot addVolumeSizesItem(Integer volumeSizesItem) {
    if (this.volumeSizes == null) {
      this.volumeSizes = new ArrayList<Integer>();
    }
    this.volumeSizes.add(volumeSizesItem);
    return this;
  }

   /**
   * The sizes of the volumes used to create the snapshots, in gibibytes (GiB).
   * @return volumeSizes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sizes of the volumes used to create the snapshots, in gibibytes (GiB).")

  public List<Integer> getVolumeSizes() {
    return volumeSizes;
  }


  public void setVolumeSizes(List<Integer> volumeSizes) {
    this.volumeSizes = volumeSizes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiltersSnapshot filtersSnapshot = (FiltersSnapshot) o;
    return Objects.equals(this.accountAliases, filtersSnapshot.accountAliases) &&
        Objects.equals(this.accountIds, filtersSnapshot.accountIds) &&
        Objects.equals(this.descriptions, filtersSnapshot.descriptions) &&
        Objects.equals(this.permissionsToCreateVolumeAccountIds, filtersSnapshot.permissionsToCreateVolumeAccountIds) &&
        Objects.equals(this.permissionsToCreateVolumeGlobalPermission, filtersSnapshot.permissionsToCreateVolumeGlobalPermission) &&
        Objects.equals(this.progresses, filtersSnapshot.progresses) &&
        Objects.equals(this.snapshotIds, filtersSnapshot.snapshotIds) &&
        Objects.equals(this.states, filtersSnapshot.states) &&
        Objects.equals(this.tagKeys, filtersSnapshot.tagKeys) &&
        Objects.equals(this.tagValues, filtersSnapshot.tagValues) &&
        Objects.equals(this.tags, filtersSnapshot.tags) &&
        Objects.equals(this.volumeIds, filtersSnapshot.volumeIds) &&
        Objects.equals(this.volumeSizes, filtersSnapshot.volumeSizes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountAliases, accountIds, descriptions, permissionsToCreateVolumeAccountIds, permissionsToCreateVolumeGlobalPermission, progresses, snapshotIds, states, tagKeys, tagValues, tags, volumeIds, volumeSizes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiltersSnapshot {\n");
    sb.append("    accountAliases: ").append(toIndentedString(accountAliases)).append("\n");
    sb.append("    accountIds: ").append(toIndentedString(accountIds)).append("\n");
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    permissionsToCreateVolumeAccountIds: ").append(toIndentedString(permissionsToCreateVolumeAccountIds)).append("\n");
    sb.append("    permissionsToCreateVolumeGlobalPermission: ").append(toIndentedString(permissionsToCreateVolumeGlobalPermission)).append("\n");
    sb.append("    progresses: ").append(toIndentedString(progresses)).append("\n");
    sb.append("    snapshotIds: ").append(toIndentedString(snapshotIds)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    tagKeys: ").append(toIndentedString(tagKeys)).append("\n");
    sb.append("    tagValues: ").append(toIndentedString(tagValues)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    volumeIds: ").append(toIndentedString(volumeIds)).append("\n");
    sb.append("    volumeSizes: ").append(toIndentedString(volumeSizes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

