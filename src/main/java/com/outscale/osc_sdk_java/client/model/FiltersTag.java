/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * One or more filters.
 */
@ApiModel(description = "One or more filters.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class FiltersTag {
  public static final String SERIALIZED_NAME_KEYS = "Keys";
  @SerializedName(SERIALIZED_NAME_KEYS)
  private List<String> keys = null;

  public static final String SERIALIZED_NAME_RESOURCE_IDS = "ResourceIds";
  @SerializedName(SERIALIZED_NAME_RESOURCE_IDS)
  private List<String> resourceIds = null;

  public static final String SERIALIZED_NAME_RESOURCE_TYPES = "ResourceTypes";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPES)
  private List<String> resourceTypes = null;

  public static final String SERIALIZED_NAME_VALUES = "Values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private List<String> values = null;


  public FiltersTag keys(List<String> keys) {
    
    this.keys = keys;
    return this;
  }

  public FiltersTag addKeysItem(String keysItem) {
    if (this.keys == null) {
      this.keys = new ArrayList<String>();
    }
    this.keys.add(keysItem);
    return this;
  }

   /**
   * The keys of the tags that are assigned to the resources. You can use this filter alongside the &#x60;Values&#x60; filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.
   * @return keys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The keys of the tags that are assigned to the resources. You can use this filter alongside the `Values` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.")

  public List<String> getKeys() {
    return keys;
  }


  public void setKeys(List<String> keys) {
    this.keys = keys;
  }


  public FiltersTag resourceIds(List<String> resourceIds) {
    
    this.resourceIds = resourceIds;
    return this;
  }

  public FiltersTag addResourceIdsItem(String resourceIdsItem) {
    if (this.resourceIds == null) {
      this.resourceIds = new ArrayList<String>();
    }
    this.resourceIds.add(resourceIdsItem);
    return this;
  }

   /**
   * The IDs of the resources with which the tags are associated.
   * @return resourceIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IDs of the resources with which the tags are associated.")

  public List<String> getResourceIds() {
    return resourceIds;
  }


  public void setResourceIds(List<String> resourceIds) {
    this.resourceIds = resourceIds;
  }


  public FiltersTag resourceTypes(List<String> resourceTypes) {
    
    this.resourceTypes = resourceTypes;
    return this;
  }

  public FiltersTag addResourceTypesItem(String resourceTypesItem) {
    if (this.resourceTypes == null) {
      this.resourceTypes = new ArrayList<String>();
    }
    this.resourceTypes.add(resourceTypesItem);
    return this;
  }

   /**
   * The resource type (&#x60;vm&#x60; \\| &#x60;image&#x60; \\| &#x60;volume&#x60; \\| &#x60;snapshot&#x60; \\| &#x60;public-ip&#x60; \\| &#x60;security-group&#x60; \\| &#x60;route-table&#x60; \\| &#x60;nic&#x60; \\| &#x60;net&#x60; \\| &#x60;subnet&#x60; \\| &#x60;net-peering&#x60; \\| &#x60;net-access-point&#x60; \\| &#x60;nat-service&#x60; \\| &#x60;internet-service&#x60; \\| &#x60;client-gateway&#x60; \\| &#x60;virtual-gateway&#x60; \\| &#x60;vpn-connection&#x60; \\| &#x60;dhcp-options&#x60; \\| &#x60;task&#x60;).
   * @return resourceTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The resource type (`vm` \\| `image` \\| `volume` \\| `snapshot` \\| `public-ip` \\| `security-group` \\| `route-table` \\| `nic` \\| `net` \\| `subnet` \\| `net-peering` \\| `net-access-point` \\| `nat-service` \\| `internet-service` \\| `client-gateway` \\| `virtual-gateway` \\| `vpn-connection` \\| `dhcp-options` \\| `task`).")

  public List<String> getResourceTypes() {
    return resourceTypes;
  }


  public void setResourceTypes(List<String> resourceTypes) {
    this.resourceTypes = resourceTypes;
  }


  public FiltersTag values(List<String> values) {
    
    this.values = values;
    return this;
  }

  public FiltersTag addValuesItem(String valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<String>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * The values of the tags that are assigned to the resources. You can use this filter alongside the &#x60;TagKeys&#x60; filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.
   * @return values
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The values of the tags that are assigned to the resources. You can use this filter alongside the `TagKeys` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.")

  public List<String> getValues() {
    return values;
  }


  public void setValues(List<String> values) {
    this.values = values;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiltersTag filtersTag = (FiltersTag) o;
    return Objects.equals(this.keys, filtersTag.keys) &&
        Objects.equals(this.resourceIds, filtersTag.resourceIds) &&
        Objects.equals(this.resourceTypes, filtersTag.resourceTypes) &&
        Objects.equals(this.values, filtersTag.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keys, resourceIds, resourceTypes, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiltersTag {\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    resourceIds: ").append(toIndentedString(resourceIds)).append("\n");
    sb.append("    resourceTypes: ").append(toIndentedString(resourceTypes)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

