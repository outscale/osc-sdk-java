/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UpdateListenerRuleRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class UpdateListenerRuleRequest {
  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_HOST_PATTERN = "HostPattern";
  @SerializedName(SERIALIZED_NAME_HOST_PATTERN)
  private String hostPattern;

  public static final String SERIALIZED_NAME_LISTENER_RULE_NAME = "ListenerRuleName";
  @SerializedName(SERIALIZED_NAME_LISTENER_RULE_NAME)
  private String listenerRuleName;

  public static final String SERIALIZED_NAME_PATH_PATTERN = "PathPattern";
  @SerializedName(SERIALIZED_NAME_PATH_PATTERN)
  private String pathPattern;


  public UpdateListenerRuleRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public UpdateListenerRuleRequest hostPattern(String hostPattern) {
    
    this.hostPattern = hostPattern;
    return this;
  }

   /**
   * A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].
   * @return hostPattern
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].")

  public String getHostPattern() {
    return hostPattern;
  }


  public void setHostPattern(String hostPattern) {
    this.hostPattern = hostPattern;
  }


  public UpdateListenerRuleRequest listenerRuleName(String listenerRuleName) {
    
    this.listenerRuleName = listenerRuleName;
    return this;
  }

   /**
   * The name of the listener rule.
   * @return listenerRuleName
  **/
  @ApiModelProperty(required = true, value = "The name of the listener rule.")

  public String getListenerRuleName() {
    return listenerRuleName;
  }


  public void setListenerRuleName(String listenerRuleName) {
    this.listenerRuleName = listenerRuleName;
  }


  public UpdateListenerRuleRequest pathPattern(String pathPattern) {
    
    this.pathPattern = pathPattern;
    return this;
  }

   /**
   * A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&amp;quot;&#39;@:+?].
   * @return pathPattern
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?].")

  public String getPathPattern() {
    return pathPattern;
  }


  public void setPathPattern(String pathPattern) {
    this.pathPattern = pathPattern;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateListenerRuleRequest updateListenerRuleRequest = (UpdateListenerRuleRequest) o;
    return Objects.equals(this.dryRun, updateListenerRuleRequest.dryRun) &&
        Objects.equals(this.hostPattern, updateListenerRuleRequest.hostPattern) &&
        Objects.equals(this.listenerRuleName, updateListenerRuleRequest.listenerRuleName) &&
        Objects.equals(this.pathPattern, updateListenerRuleRequest.pathPattern);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dryRun, hostPattern, listenerRuleName, pathPattern);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateListenerRuleRequest {\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    hostPattern: ").append(toIndentedString(hostPattern)).append("\n");
    sb.append("    listenerRuleName: ").append(toIndentedString(listenerRuleName)).append("\n");
    sb.append("    pathPattern: ").append(toIndentedString(pathPattern)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

