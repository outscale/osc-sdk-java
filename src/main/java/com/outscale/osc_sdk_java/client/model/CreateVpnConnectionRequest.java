/*
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> You can learn more about errors returned by the API in the dedicated [errors page](api/errors).<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).
 *
 * The version of the OpenAPI document: 1.23
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.outscale.osc_sdk_java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CreateVpnConnectionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-01T09:51:28.653202Z[Etc/UTC]")
public class CreateVpnConnectionRequest {
  public static final String SERIALIZED_NAME_CLIENT_GATEWAY_ID = "ClientGatewayId";
  @SerializedName(SERIALIZED_NAME_CLIENT_GATEWAY_ID)
  private String clientGatewayId;

  public static final String SERIALIZED_NAME_CONNECTION_TYPE = "ConnectionType";
  @SerializedName(SERIALIZED_NAME_CONNECTION_TYPE)
  private String connectionType;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_STATIC_ROUTES_ONLY = "StaticRoutesOnly";
  @SerializedName(SERIALIZED_NAME_STATIC_ROUTES_ONLY)
  private Boolean staticRoutesOnly;

  public static final String SERIALIZED_NAME_VIRTUAL_GATEWAY_ID = "VirtualGatewayId";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_GATEWAY_ID)
  private String virtualGatewayId;


  public CreateVpnConnectionRequest clientGatewayId(String clientGatewayId) {
    
    this.clientGatewayId = clientGatewayId;
    return this;
  }

   /**
   * The ID of the client gateway.
   * @return clientGatewayId
  **/
  @ApiModelProperty(required = true, value = "The ID of the client gateway.")

  public String getClientGatewayId() {
    return clientGatewayId;
  }


  public void setClientGatewayId(String clientGatewayId) {
    this.clientGatewayId = clientGatewayId;
  }


  public CreateVpnConnectionRequest connectionType(String connectionType) {
    
    this.connectionType = connectionType;
    return this;
  }

   /**
   * The type of VPN connection (only &#x60;ipsec.1&#x60; is supported).
   * @return connectionType
  **/
  @ApiModelProperty(required = true, value = "The type of VPN connection (only `ipsec.1` is supported).")

  public String getConnectionType() {
    return connectionType;
  }


  public void setConnectionType(String connectionType) {
    this.connectionType = connectionType;
  }


  public CreateVpnConnectionRequest dryRun(Boolean dryRun) {
    
    this.dryRun = dryRun;
    return this;
  }

   /**
   * If true, checks whether you have the required permissions to perform the action.
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, checks whether you have the required permissions to perform the action.")

  public Boolean getDryRun() {
    return dryRun;
  }


  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public CreateVpnConnectionRequest staticRoutesOnly(Boolean staticRoutesOnly) {
    
    this.staticRoutesOnly = staticRoutesOnly;
    return this;
  }

   /**
   * If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
   * @return staticRoutesOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).")

  public Boolean getStaticRoutesOnly() {
    return staticRoutesOnly;
  }


  public void setStaticRoutesOnly(Boolean staticRoutesOnly) {
    this.staticRoutesOnly = staticRoutesOnly;
  }


  public CreateVpnConnectionRequest virtualGatewayId(String virtualGatewayId) {
    
    this.virtualGatewayId = virtualGatewayId;
    return this;
  }

   /**
   * The ID of the virtual gateway.
   * @return virtualGatewayId
  **/
  @ApiModelProperty(required = true, value = "The ID of the virtual gateway.")

  public String getVirtualGatewayId() {
    return virtualGatewayId;
  }


  public void setVirtualGatewayId(String virtualGatewayId) {
    this.virtualGatewayId = virtualGatewayId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVpnConnectionRequest createVpnConnectionRequest = (CreateVpnConnectionRequest) o;
    return Objects.equals(this.clientGatewayId, createVpnConnectionRequest.clientGatewayId) &&
        Objects.equals(this.connectionType, createVpnConnectionRequest.connectionType) &&
        Objects.equals(this.dryRun, createVpnConnectionRequest.dryRun) &&
        Objects.equals(this.staticRoutesOnly, createVpnConnectionRequest.staticRoutesOnly) &&
        Objects.equals(this.virtualGatewayId, createVpnConnectionRequest.virtualGatewayId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientGatewayId, connectionType, dryRun, staticRoutesOnly, virtualGatewayId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVpnConnectionRequest {\n");
    sb.append("    clientGatewayId: ").append(toIndentedString(clientGatewayId)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    staticRoutesOnly: ").append(toIndentedString(staticRoutesOnly)).append("\n");
    sb.append("    virtualGatewayId: ").append(toIndentedString(virtualGatewayId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

